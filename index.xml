<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kuhung&#39;s Blog on Kuhung&#39;s Blog</title>
    <link>http://kuhungio.me/</link>
    <description>Recent content in Kuhung&#39;s Blog on Kuhung&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 26 Jan 2019 15:52:08 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>12306Bypass Server 给抢票神器加上微信提醒</title>
      <link>http://kuhungio.me/2019/12306bypass-server/</link>
      <pubDate>Sat, 26 Jan 2019 15:52:08 +0800</pubDate>
      
      <guid>http://kuhungio.me/2019/12306bypass-server/</guid>
      <description>

&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;

&lt;p&gt;春节假期临近，车票一度紧张。某行、某团开了加速包后，仍然无法第一时间刷到目的地的票。稍微有点儿技术底子的我们岂能坐以待毙，自然是要自己动手，丰衣足食。&lt;/p&gt;

&lt;p&gt;网上有各类开源的工具包，这里不做过多点评。之前在好友圈内传得比较靠谱的是 12306Bypass，又叫分流。分流是一个 Windows 应用，工作在 PC 端。其核心功能完全免费，更更重要的是，它的监控刷新在本地可以真实的感知。&lt;/p&gt;

&lt;p&gt;以前在学校还好，可以守在电脑面前。但工作后，由于各种原因，无法第一时间获取分流的抢票信息，因而白白错过好几次下单付钱的机会。于是我们就有了这样一个愿望，希望能将分流的信息第一时间转发。&lt;/p&gt;

&lt;p&gt;前几日逛某论坛，有人向分流开发者传达了增加 Server 酱的请求。开发者还是很给力，在最近的几次版本迭代中实现了该功能。简单的来说，Server 酱就是一个提醒服务。在这里，我们把它用在抢票软件中。当软件抢到票时，通过该服务，给到微信提醒。通知我们及时付款。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/File_wechat.jpg&#34; alt=&#34;微信推送&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/File.jpg&#34; alt=&#34;最终效果&#34; /&gt;&lt;/p&gt;

&lt;p&gt;通过这样的形式，即可在微信端第一时间收到下订单的信息。那么如何配置这样的一个服务呢？我们只需要以下步骤。&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h1 id=&#34;准备工作&#34;&gt;准备工作&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;最新版本的分流软件 搜索关键词：12306Bypass

&lt;ul&gt;
&lt;li&gt;这里使用的版本号是&lt;code&gt;1.13.30&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;没用过？&lt;a href=&#34;https://www.12306bypass.com/?utm_source=kuhungio.me&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;下载链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Github 账号 这里用做 Server 酱的登陆认证

&lt;ul&gt;
&lt;li&gt;不知道？&lt;a href=&#34;https://github.com/?utm_source=kuhungio.me&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;注册链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;实操阶段&#34;&gt;实操阶段&lt;/h1&gt;

&lt;h2 id=&#34;server-酱&#34;&gt;Server 酱&lt;/h2&gt;

&lt;p&gt;用于获取认证的接口&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;登入：用GitHub账号 &lt;a href=&#34;http://sc.ftqq.com/?c=github&amp;amp;a=login?utm_source=kuhungio.me&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;登入网站&lt;/a&gt;，获取&lt;a href=&#34;http://sc.ftqq.com/?c=code&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SCKEY&lt;/a&gt;（在「&lt;a href=&#34;http://sc.ftqq.com/?c=code&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;发送消息&lt;/a&gt;」页面）&lt;/li&gt;
&lt;li&gt;绑定：点击「&lt;a href=&#34;http://sc.ftqq.com/?c=wechat&amp;amp;a=bind&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;微信推送&lt;/a&gt;」，扫码关注同时即完成绑定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/Screenshot_1.jpg&#34; alt=&#34;SCKEY&#34; /&gt;&lt;/p&gt;

&lt;p&gt;记住 &lt;strong&gt;SCKEY&lt;/strong&gt; ，我们接下来会用着。&lt;/p&gt;

&lt;h2 id=&#34;分流&#34;&gt;分流&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动分流，按正常流程配置票务信息。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;点选主界面左下角的推送&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/Screenshot_2.jpg&#34; alt=&#34;分流推送功能&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;填入以下信息&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通知地址 `&lt;a href=&#34;https://sc.ftqq.com/[SCKEY].send&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://sc.ftqq.com/[SCKEY].send&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;通知参数  &lt;code&gt;text=#bypass#&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/Screenshot_3.jpg&#34; alt=&#34;推送配置&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;点击测试发送，即可在微信端，收到本文一开始的推送测试提醒啦&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;实际效果&#34;&gt;实际效果&lt;/h1&gt;

&lt;p&gt;就在配置完成不久后，分流帮我抢到了回家的车票。同时在微信端，Server 酱强制推送。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/IMG_0330.jpg&#34; alt=&#34;成功推送&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/12306bypass/File_succeed.jpg&#34; alt=&#34;成功详情&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;通过这样的一番配置，我们终于能够安稳的玩耍手机，而不用担心错过订单付款时间。事实上，分流本身的基础功能，也自带了一些提醒服务。但是他们大多较为繁琐。以 QQ 提醒为例，有被顶掉下线的风险。自带的微信提醒，模拟的微信桌面登陆，理论上需要2个微信号。按照上面的操作，我们只需要简单的配置，即可实现强制推送，错过的几率大大减小。&lt;/p&gt;

&lt;p&gt;这样的推送服务，其应用场景不局限于此。这也是我琢磨它的原因之一——应用场景广泛。只要需要推送的地方，都可以嵌入这样一套服务。例如网站新增评论、或是按秒计费的服务器上模型训练结束等等。&lt;/p&gt;

&lt;p&gt;Server 酱实现的功能有限，仅针对微信推送。但这也是它针对国内业务的一种优化。类似这样的推送服务很多，国外的 Slack 功能组件也很丰富。在一些涉及敏感信息的领域，构建一套自己的推送服务，也是不错的主意。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://kuhungio.me/about/</link>
      <pubDate>Wed, 09 Jan 2019 00:14:04 +0800</pubDate>
      
      <guid>http://kuhungio.me/about/</guid>
      <description>

&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;笔名：谷粒 | kuhung&lt;/li&gt;
&lt;li&gt;毕业院校：华中科技大学 | 机械学院 | 本科18届&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;过往成果&#34;&gt;过往成果&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2018-08 | 第七届全国媒体技术处理大会 | 文本溯源技术测评 | &lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;95&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;2017-06 | Kaggle | Intel&amp;amp;MobileODTCervicalCancerScreening  | top10%&lt;/li&gt;
&lt;li&gt;2017-02 | DataCastle | 精准资助预测赛 | &lt;sup&gt;7&lt;/sup&gt;&amp;frasl;&lt;sub&gt;124&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;2016-12 | 2016 BYTE CUP | 国际机器学习竞赛 | &lt;sup&gt;8&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1029&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;2016-10 |  第五届全国社会媒体处理大会 | 用户画像技术测评 | &lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;373&lt;/sub&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;工作履历&#34;&gt;工作履历&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2018.07~至今 网易游戏 数据挖掘工程师&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;工作方向&#34;&gt;工作方向&lt;/h2&gt;

&lt;p&gt;数据挖掘工程师，机器学习方向。从事数据平台建设和机器学习应用项目开发。包括数据应用开发、数据建模等。赋能游戏运营。&lt;/p&gt;

&lt;h2 id=&#34;兴趣方向&#34;&gt;兴趣方向&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Docker、AutoML 、数据可视化&lt;/li&gt;
&lt;li&gt;机器视觉、自然语言处理、计算广告&lt;/li&gt;
&lt;li&gt;经济、管理、科幻&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;微信关注&#34;&gt;微信关注&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/me/wechat.jpg&#34; alt=&#34;扫码关注公众号&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>速查表 | Linear Algebra and Calculus 线代与微积分</title>
      <link>http://kuhungio.me/2018/algebra-calculus/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/algebra-calculus/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/algebra-calculus-1.png&#34; alt=&#34;线代与微积分速查表·一&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/algebra-calculus-2.png&#34; alt=&#34;线代与微积分速查表·二&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>速查表 | Probabilities Statistics 数理统计</title>
      <link>http://kuhungio.me/2018/probabilities-statistics/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/probabilities-statistics/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/probabilities-statistics-1.png&#34; alt=&#34;数理统计速查表·一&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/probabilities-statistics-2.png&#34; alt=&#34;数理统计速查表·二&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/probabilities-statistics-3.png&#34; alt=&#34;数理统计速查表·三&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why is Data Hard 为啥说做数据这行不容易</title>
      <link>http://kuhungio.me/2018/why-is-data-hard/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/why-is-data-hard/</guid>
      <description>

&lt;p&gt;原文链接 &lt;a href=&#34;https://medium.com/@HelenLeeKupp/why-is-data-hard-3ed96ec70f3f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Slack 工程师 : why-is-data-hard?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;做数据挖掘时，常常需要考虑很多方面。其中一个方面，常常会涉及到跨功能，复杂且琐碎的一些事项。数据准备以及评价指标的制定，就是这些事项之一。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;等等，似乎干数据这一行，并不容易？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当大多数的组织谈到数据时，他们想的其实是指标——能反应近期业务、或是能够提供数据驱动的决策、抑或是能够监测企业经营状况的指标。&lt;/p&gt;

&lt;p&gt;按上面的说法，我们应该能够招聘到聪明且能干的分析师，做出酷炫的可视化仪表盘，并马上投入使用。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Every second of every day, our senses bring in way [more] data than we can possibly process in our brains.”&amp;ndash; Peter Diamandis, Founder of the X-Prize&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;拥有大量的数据并不会立马产生价值。当你是在数据增长快如 Slack 这样的公司处理数据时，不仅怎样驾驭数据和指标极其重要且困难的，更困难的是你像是在 “building the plane as it is flying”。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;数据金字塔-评价指标-metrics-最为重要&#34;&gt;数据金字塔：评价指标（metrics）最为重要&lt;/h2&gt;

&lt;p&gt;数据金子塔大致可以分为4个级别。每一个级别都高度依赖下一级。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/why-is-data-hard/image.png&#34; alt=&#34;数据金字塔&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;见解-洞察-insights&#34;&gt;见解/洞察（Insights）&lt;/h4&gt;

&lt;p&gt;大部分的老板和公司董事关心的是这一层。见解（Insights）是我们所讲的关于数据的故事，即什么驱动了商业，或者是有什么新的机会能够推动大量的增长。&lt;/p&gt;

&lt;p&gt;在理想的世界中，有一个共享的、不断演进的关于业务性能的数据叙述。这种数据叙述在整个组织中传播，以建立对业务的共同理解。&lt;/p&gt;

&lt;h4 id=&#34;探索以及工具&#34;&gt;探索以及工具&lt;/h4&gt;

&lt;p&gt;为了获得见解，我们需要雇佣很多人定期去探索数据。只有当有人在盯着数据的时候，才能有策划和故事!&lt;/p&gt;

&lt;p&gt;在快速增长的业务中，最优的数据探索涉及到一些关键事物：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据探查的多样性。&lt;/strong&gt;要真正建立起，对正在发生的事情和重要的事情的理解和见解，我们需要每个人都拥有，对数据的关注和探索的主人翁意识。现实情况是，如果探索困难，只有管理员(分析师)能够完成这项工作。你要么雇佣更多的分析师来深入挖掘你的见解，或者，你可以找到简化数据访问的方法，让团队能够自行解决问题。Slack 的做法介于两者之间——我们不断寻找，在整个组织中增加自助数据服务的方法；同时也确保，我们有优秀的分析师参与到每一个核心功能来。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;频繁使用。&lt;/strong&gt;像所有良好习惯的养成一样，查看数据和指标的一致性，是建立对所期望东西见解的唯一方法，什么样的结果是出乎意料的，什么样的问题是需要分析数据的。分析师可以帮助挖掘趋势，有些趋势值得挖掘，而许多趋势则不然。如果老板经常查看数据，那么你的分析师就更有可能对他们的精力，进行最优配置。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;例子：&lt;/strong&gt;本周活跃用户增加了4%。这是好是坏？是预期的增长放缓?还是因为这周，我们推出了新产品，所以实际上我们希望的是，高于平时一周的增长?&lt;/p&gt;

&lt;p&gt;分析师能够挖掘并做出各种比较，以帮助老板对数字进行说明。分析人士可以将该数字与往年做比较，深入了解这些新要素的组成，以及他们来自哪里。也许4%符合你的期望。但事实上，它比平时要低，我们没有推出任何新产品，且处于一个缓增长放缓期。这就是您希望董事会和分析人员构建的见解。你不会希望在某些事情上耗费精力，这些事情并不会带来业务的增长，或者改变我们的决策。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;发现能力与数据探索。&lt;/strong&gt;数据探索不同于在仪表盘上点来点去，这是我想在这里指出的。仪表盘是用一组具体的需求创建的，通常在特定的粒度级别上报告指标或世界的某些视图。数据探索是一种能力，即通过各种不同的特征结合来调查指标，以确定在固定的仪表盘中不会立即出现的趋势或机会。可以将其考虑为，能够对数据进行转换和筛选，从而向监控之外的数据提出问题的能力。看到活跃用户的激增吗？太棒了！也许我们需要探究这在所有国家都这样，还是仅仅出现在英国。那周我们是否发起了一项针对英国的营销行动？销售团队是不是在那周完成了一个大单子?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;企业主离数据越近，他们就越有能力着手进行自助服务的探索，就能发现更快捷、更有效的关键见解。这是因为，他们更有能力将我们在业务中所做的事情，与我们在数据中可能表现的特点结合起来。反之亦然！那些从商业伙伴那里拥有大量业务背景的分析人士，可以更快地找到正确的见解，而不是身陷各种假设之中。对于一个快速成长的组织来说，你可能希望两者都存在于你的组织中，这样每个人都能带着主人翁意识，理解我们最大的机遇和存在的差距。&lt;/p&gt;

&lt;h4 id=&#34;指标和维度&#34;&gt;指标和维度&lt;/h4&gt;

&lt;p&gt;在探索和工具层面，有很多数据驱动的决策。但我们在 Slack 发现，如果数据不容易理解、不清晰或是不可信，即使工具各种各样，也无法进行更广泛的数据挖掘。这是为什么，一致性、被充分理解的、明确定义的指标和维度是如此重要。&lt;/p&gt;

&lt;p&gt;由于各种原因，数据可能不可信；或是不可获得（没有权限）；也可能数据是错误的（数据丢失或是跟踪出了问题）；再或者是不清楚数据代表什么以及如何使用它。在这种情况下，数据本身的完整性就不那么重要了。更需要关心的是，数据使用者在能够进行挖掘之前，需要花多少时间来检查和测试他们的工作。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;例子：&lt;/strong&gt;在 Slack 公司，我们有两种不同的地理定位方式。如果你想了解用户数据，了解我们的国际活动和产品发布是如何进行的，或者寻找更多的机会让我们的业绩更上一层楼，那么地理位置是很重要的。&lt;/p&gt;

&lt;p&gt;我们的地理定义有两种：一由团队和用户的IP地址（他们使用 Slack 的地址），二是由团队的账单地址（通常是公司总部）来定义的。&lt;/p&gt;

&lt;p&gt;对于以上两种方法，我们都有充分理由。当我们考虑产品特性和发布时，我们真正关心的是产品实际使用的地方。基于 ip 的位置绝对是我们想要看到的。另一方面，对于财务报告和衡量我们的收入来源，我们则希望通过账单地址来理解数据。&lt;/p&gt;

&lt;p&gt;但是，我们的新用户在数据上可能会感到疑惑。先是会对使用哪个版本的位置信息感到困惑，再者是在使用一个版本，会看到不同版本的报告、并且数字不匹配。无论哪种情况，这个新用户都会对你的数据挖掘能力产生怀疑，或者对数据本身失去信任。&lt;/p&gt;

&lt;p&gt;解决这个问题的方式有很多。通常，最有效、最简单的解决方案不是技术上的。对于我们来说，我们对每个指标或维度，都进行了更清晰的解释和标注。我们对公司进行了培训，指导他们在什么情况下，使用哪种指标。这是分析团队在和客户合作时的主要工作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在整个公司中，重要的是要非常清楚地了解，业务的关键指标和维度是什么，以及这些指标和维度是如何定义的。这些对普通的数据使用者来说是显而易见的吗？通过文档、培训和打标签，我们能更容易理解吗？我们是否在使用和讨论，我们团队中达成共识的度量标准和维度?&lt;/p&gt;

&lt;p&gt;我们现在还在做很多这样的工作，因为有很多方法可以让组织更好地进行迭代，使我们做得更棒。更重要的是，你在继续成长，更多的新人加入团队，并推出由你主导的新产品！&lt;/p&gt;

&lt;h4 id=&#34;基础设施&#34;&gt;基础设施&lt;/h4&gt;

&lt;p&gt;在所有这些基础之下的是数据基础设施，使上面的一切能够稳定、可靠，甚至在 100 倍的尺度范围内都可以访问。数据基础设施是连接所有产品的管道，它输出了我们需要了解整个组织中，正在发生事情的原始信息。一旦拥有了作为业务监视、探索和驱动见解所需的指标、维度和定义，你就需要确保实际上收集了原始数据，以便在产品的任何地方支持这些指标和维度。&lt;/p&gt;

&lt;p&gt;在一个看似简单的指标下，基础设施通常包括:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;仪表盘:&lt;/strong&gt; 产品的原始数据收集。这些数据收集通常是通过产品团队和数据工程团队的同事来完成的。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;聚合&lt;/strong&gt;: 原始数据需要聚合成一个干净、一致、可信的形式。这通常是由数据工程团队实现，其中有一些来自分析团队的贡献。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;指标逻辑:&lt;/strong&gt; 最后，在聚合数据的顶部，应用指标逻辑来生成业务指标。这再次是数据工程团队和数据分析团队之间的协作；通常，主要来自于分析方面。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;没有基础设施，就没有数据可看。在某些情况下，随着数据需求的发展，你必须添加新的工具。如果你发布了一个新产品特性，并想要衡量是否采用该特性，该怎么办？是否有数据采集，可以捕获你想了解的，关于是否采用的信息？我们是否能够将这些数据，聚合在一个可以用于测量和见解的水平上？基础设施是实现这一切的生命线。​&lt;/p&gt;

&lt;h4 id=&#34;数据反馈&#34;&gt;数据反馈&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/why-is-data-hard/image_2.png&#34; alt=&#34;数据金字塔的循环&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在这4个层次中，成功的数据和洞见来自于&lt;strong&gt;不断的反馈&lt;/strong&gt;以及和后台工程师之间的密切关系，数据的终端用户，以及介于两者之间的人。这些总是需要不断地迭代和反馈。随着公司的变化，快速增长，以及不断地寻找增长点，这一点变得更加重要。&lt;/p&gt;

&lt;h4 id=&#34;快速增长-产品增速超过数据&#34;&gt;快速增长: 产品增速超过数据&lt;/h4&gt;

&lt;p&gt;在实际中，做数据并不容易，因为它涉及很多跨职能的团队，而且很多公司的大多数人都没有意识到，需要实现“底层”工作。见解只是冰山的一角。&lt;/p&gt;

&lt;p&gt;每个快速增长公司的需求，都会超过其数据能力。是什么样子的呢?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;市场营销活动的复杂性增加。启动一个销售团队，或是通过新的供应商进行新的营销活动。系统被引入来支持这些团队，但不能在数据上有明确的暴露。​&lt;/li&gt;
&lt;li&gt;增加产品特性，或仅仅增加产品线。推出一个新的企业产品。国际化。​&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果没有基础设施来收集所有相关的数据，或者如果有太多的系统不能相互通信，不能建立可靠的数据集，那么你就会&lt;strong&gt;陷入数据泥沼&lt;/strong&gt;。当团队快速发展，并专注于实现目标时，这并不少见。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;那么，你该如何脱离泥沼？或者，为什么要涉及策略？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;记住数据金字塔。与一般的企业主所理解的相比，需要更多的依赖性和基础性的工作。摆脱泥沼，需要去做更多基础性的工作。对于一般的数据项目来说，这意味着公司的培训和支出是工作的重要部分。看起来就像:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;深入了解情况，与团队沟通公司的现状以及我们所处的环境。​&lt;/li&gt;
&lt;li&gt;在12-18个月的时间里，为数据策略构建一个远期规划，并制定一个计划，明确达到目标，所需的资源和时间。​&lt;/li&gt;
&lt;li&gt;让所有的数据团队按上面的做，并创建一个论坛，以便继续处理这些跨组织的项目和专项任务，这样才能实现全局的最优（我们喜欢称之为 #data- XFN）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;说起来容易做起来难！但是，我们已经知道：干数据这一行并不容易。但从更大的尺度来讲，正确地处理数据，将使更多的团队能够理解业务并做出正确的决策。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>时序小结 | time series problem summary 时间序列问题处理</title>
      <link>http://kuhungio.me/2018/time-series-problem-summary/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/time-series-problem-summary/</guid>
      <description>

&lt;p&gt;Source &lt;a href=&#34;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;总结一-保证数据同分布&#34;&gt;总结一：保证数据同分布&lt;/h3&gt;

&lt;p&gt;验证集的选取，分布上应尽量靠近测试集。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方式一:：对抗验证集的生成。&lt;/li&gt;
&lt;li&gt;方式二： 就近选取相同天数。&lt;/li&gt;
&lt;li&gt;方式三:：类比属性。如本赛题 &amp;ldquo;golden week&amp;rdquo; 与 &amp;ldquo;new year&amp;rdquo; 类比，选取 &amp;ldquo;new year&amp;rdquo; 段作为验证集。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;tips: &lt;strong&gt;kfold 用在时间序列上不合适，会有数据泄露风险。正确的方法应是滑窗。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;总结二-异常值特殊处理&#34;&gt;总结二：异常值特殊处理&lt;/h3&gt;

&lt;p&gt;一些特殊的时间节点（或者说是异常值），应该予以特殊考虑。比如本次比赛中的 &amp;ldquo;golden week&amp;rdquo;.。需要对其进行变换，而不是直接依靠模型的预测结果。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;方式一:：等同法&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The rules:&lt;/p&gt;

&lt;p&gt;Treat holiday as Saturday&lt;/p&gt;

&lt;p&gt;If the day before holiday is weekday ,treat the day before holiday as Friday
If the day after holiday is weekday ,treat the day after holiday as Monday
it work not only golden week but also a lot other holidays.&lt;/p&gt;

&lt;p&gt;So the trick is from careful EDA and CV rather than luck&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;方式二:：标记法&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;days-from-holiday or days-to-holiday
or
0/1 flags whether the previous/next day and second-to-last/next-but-one day is a holiday.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;#Source https://github.com/MaxHalford/kaggle-recruit-restaurant/blob/master/Solution.ipynb

date_info = pd.read_csv(&#39;data/kaggle/date_info.csv&#39;)
date_info.rename(columns={&#39;holiday_flg&#39;: &#39;is_holiday&#39;, &#39;calendar_date&#39;: &#39;visit_date&#39;}, inplace=True)
date_info[&#39;prev_day_is_holiday&#39;] = date_info[&#39;is_holiday&#39;].shift().fillna(0)
date_info[&#39;next_day_is_holiday&#39;] = date_info[&#39;is_holiday&#39;].shift(-1).fillna(0)

date_info.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;总结三-特征构造靠倒推&#34;&gt;总结三：特征构造靠倒推&lt;/h3&gt;

&lt;p&gt;时间序列的特征生成，还是多靠 lagging 往前推的手法。&lt;/p&gt;

&lt;p&gt;Source &lt;a href=&#34;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion/49174&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion/49174&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;lagging visitors features 1-14 (by &amp;lsquo;air_store_id&amp;rsquo; and by dayOfWeek), lagging visitors features 1-14 (by &amp;lsquo;air_store_id&amp;rsquo; only), the lagging-difference visitors features 1-13, the lagging-difference-delta4 visitors features 1-10, WeightedMovingAverage for the lagging lagging visitors features, mean/median/min/max/(percentile10,30,70,90)/sum/count visitor stats features for past 14 days, 28 days, 60 days, 90 days, 120 days, 180 days, 364 days (by &amp;lsquo;air_store_id&amp;rsquo; and by dayOfWeek), mean/median/min/max/(percentile10,30,70,90)/sum/count visitor stats features for past 14 days, 28 days, 60 days, 90 days, 120 days, 180 days, 364 days (by &amp;lsquo;air_store_id&amp;rsquo; only).
or
mean weekly visitors up to lag 20 and for mean monthly visitors up to lag 8 or so&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;总结四-独立建模&#34;&gt;总结四：独立建模&lt;/h3&gt;

&lt;p&gt;模型训练。时间序列问题，一般是预测未来一段时间的情况。针对总结三中的特征生成方法，为避免过拟合，宜采用每天分开建模的方法。原因在于：靠后的时间，其特征依赖前面的预测结果来生成。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;个人感想&#34;&gt;个人感想&lt;/h4&gt;

&lt;p&gt;取得好效果，大多数时间靠的不是复杂的模型、不是复杂的CV方式，而是&lt;strong&gt;对数据的观察&lt;/strong&gt;（如： holiday trick 加公开的 kernel， 就可以取得银牌的成绩）以及&lt;strong&gt;特征构造方面的实践&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top solutions are rather simple.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Single Shot MultiBox Detector Keras version</title>
      <link>http://kuhungio.me/2017/ssd/</link>
      <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2017/ssd/</guid>
      <description>

&lt;h1 id=&#34;ssd目标检测keras版&#34;&gt;SSD目标检测Keras版&lt;/h1&gt;

&lt;p&gt;SSD是一种Object Detection方法。本文是基于论文&lt;a href=&#34;http://arxiv.org/abs/1512.02325&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SSD: Single Shot MultiBox Detector&lt;/a&gt;，实现的keras版本。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;该文章在既保证速度，又要保证精度的情况下，提出了SSD物体检测模型，与现在流行的检测模型一样，将检测过程整个成一个single deep neural network。便于训练与优化，同时提高检测速度。
SSD将输出一系列离散化（discretization）的bounding boxes，这些bounding boxes是在不同层次（layers）上的feature maps上生成的，并且有着不同的aspect ratio。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;模型效果&#34;&gt;模型效果&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模型对载具的检测
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Aeroplane.png&#34; height=&#34;300&#34;&gt;
&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Bicycle.png&#34; height=&#34;300&#34;&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;模型对动物的检测
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Dog.png&#34; height=&#34;300&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Cat.png&#34; height=&#34;300&#34;&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;模型的视频检测
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/car.gif&#34;&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;如何使用&#34;&gt;如何使用&lt;/h2&gt;

&lt;p&gt;项目地址&lt;a href=&#34;https://github.com/kuhung/SSD_keras&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;kuhung/SSD_keras&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;所需依赖&#34;&gt;所需依赖&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cv2==3.3.0
keras==1.2.2
matplotlib==2.1.0
tensorflow==1.3.0
numpy==1.13.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果想跑通视频模块，则需额外&lt;code&gt;pip install scikit-video&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;具体操作&#34;&gt;具体操作&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:kuhung/SSD_keras.git
cd SSD_keras
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Download model weight &lt;code&gt;weights_SSD300.hdf5&lt;/code&gt;&lt;a href=&#34;https://github.com/kuhung/SSD_keras/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp weights_SSD300.hdf5 into SSD_keras
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;对于图片的检测&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考SSD.ipynb&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;若要剪切图片为下一步处理做准备&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考SSD_crop.py&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;检测视频
&lt;code&gt;bash
cd video_utils
python videotest_example.py hy.mp4
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;参考资料&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://arxiv.org/abs/1512.02325&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SSD: Single Shot MultiBox Detector&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/u010167269/article/details/52563573&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;论文阅读：SSD: Single Shot MultiBox Detector&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rykov8/ssd_keras&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;rykov8/ssd_keras&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cats VS. Dogs 图像分类之猫狗大战</title>
      <link>http://kuhungio.me/2016/%E7%8C%AB%E7%8B%97%E5%A4%A7%E6%88%98/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2016/%E7%8C%AB%E7%8B%97%E5%A4%A7%E6%88%98/</guid>
      <description>

&lt;p&gt;我是参加DataCastle猫狗大战的选手，kuhung。在测评中，我提交的数据集最后评分0.98639。以下是我的备战过程及心得体会。（最后有完整代码及较全面的注释）&lt;/p&gt;

&lt;h2 id=&#34;个人介绍&#34;&gt;个人介绍&lt;/h2&gt;

&lt;p&gt;华中科技大学机械学院的大二（准大三）学生，接触数据挖掘快有一年了。早期在学生团队做过一些D3数据可视化方面的工作，今年上半年开始数据挖掘实践。想把这个爱好发展成事业。做过阿里的天池竞赛，也有在kaggle混迹。算个数据新手，但一直不承认：你是新人，所以成绩不好看没啥关系。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;初识比赛&#34;&gt;初识比赛&lt;/h2&gt;

&lt;p&gt;第一次接触数据集，就感觉有些难度。因为以前没做过图片分类的比赛，更没想过要用深度学习的神经网络进行识别。思索一番，还是觉得特征提取后，使用决策树靠谱。自己也下去找过资料，发现并不容易实现。期间，还曾一度想过肉眼识别。但打开文件，看到那1400+图片，就觉得这时间花在肉眼识别上不值。中间一度消停。&lt;/p&gt;

&lt;h2 id=&#34;初见曙光-yinjh战队分享&#34;&gt;初见曙光——yinjh战队分享&lt;/h2&gt;

&lt;p&gt;后来上论坛逛过几次。一次偶然的机会，让我看到了yinjh团队分享的vgg16模型。乍一看，代码简单、效果不错。更为重要的是，这个模型自己以前从未见过。于是抱着验证学习的态度，我把代码扣了下来，打算自己照着做一遍。&lt;/p&gt;

&lt;h2 id=&#34;过程艰难&#34;&gt;过程艰难&lt;/h2&gt;

&lt;p&gt;一开始，我就把一屏的代码放进了我的jupyter notebook中，一步一步试水。很明显，我的很多依赖包都没安装，所以也是错误不断。早先是在Windows系统下，使用python2.7，需要什么包，就安装什么包。在安装keras过程中，我发现了Anaconda——很好用的一个科学计算环境，集成了各种数据挖掘包。即使是这样，仍然是满屏的错误，亟待排查。&lt;/p&gt;

&lt;h2 id=&#34;步步优化&#34;&gt;步步优化&lt;/h2&gt;

&lt;p&gt;离比赛截止就还只有几天，一边准备期末考试，一边焦急地排查bug。Windows系统下仍有个别难以解决的错误，我索性切换到了做NAO机器人时装的Ubuntu系统下。结合keras给的官方文档，我对原代码进行了函数拆分解耦，又在循环体部分增加了异常检测。综合考虑性能，稍微修改了循环结构。下载好训练的vgg16_weights，在没有错误之后，焦急地等待25分钟后，屏幕开始打印结果。&lt;/p&gt;

&lt;h2 id=&#34;欣喜万分&#34;&gt;欣喜万分&lt;/h2&gt;

&lt;p&gt;第一次提交，随便截取了前面一段，没成绩。折腾了几次，才发现是提交的格式出了问题。后面取p=0.99+部分，提交结果在0.58左右，数据集大概有90个。估计了下，狗狗总数应该在180左右。第二次提交，取了180左右，结果0.97多一点。第三次，也是最后一次提交，取了result前189个，结果0.98639，一举升到第一。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;比赛总结&#34;&gt;比赛总结&lt;/h3&gt;

&lt;p&gt;这次比赛，首先还得感谢yinjh团队的yin前辈。如果没有您分享的代码，就不会有我今天的成绩。感谢您分享的代码，感想您在我写这篇分享时提供的代码指导。
再者，感谢我的女票晶晶，谢谢你一直陪在我身边，谢谢你包容我写代码时不那么快的回复手速。我是新手，但我一直不觉得成绩低是理所当。立志从事这一行，就需要快速地学习、快速地成长。新人，也需要做到最好。当然，自己目前还存在很多问题。一些基本的概念只是模糊掌握，需要更多的实践，需要更多的理论积淀，而不是简单地做一个调包侠。&lt;/p&gt;

&lt;h3 id=&#34;给新手的建议&#34;&gt;给新手的建议&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;善用搜索引擎，多读官方文档，不要一开始就依赖Google。&lt;/li&gt;
&lt;li&gt;Google Groups、Stack Overflow、GitHub是好东西。&lt;/li&gt;
&lt;li&gt;干！就是干！&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;完整代码&#34;&gt;完整代码&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;以下操作均在Ubuntu14.04+Anaconda中进行&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;导入python标准包&#34;&gt;导入python标准包&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os   # 处理字符串路径
import glob  # 用于查找文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;导入相关库&#34;&gt;导入相关库&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;keras&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;keras是基于Theano的深度学习(Deep Learning)框架&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;详细信息请见&lt;a href=&#34;http://keras.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;keras官方文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;安装过程&#34;&gt;安装过程&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;conda update conda&lt;/p&gt;

&lt;p&gt;conda update &amp;ndash;all&lt;/p&gt;

&lt;p&gt;conda install mingw libpython&lt;/p&gt;

&lt;p&gt;pip install git+git://github.com/Theano/Theano.git&lt;/p&gt;

&lt;p&gt;pip install git+git://github.com/fchollet/keras.git&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;cv2&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenCV库&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;conda isntall opnecv&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;numpy&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anaconda自带&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from keras.models import Sequential
from keras.layers.core import Flatten, Dense, Dropout
from keras.layers.convolutional import Convolution2D, MaxPooling2D, ZeroPadding2D
from keras.optimizers import SGD
import cv2, numpy as np
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用keras建立vgg16模型&#34;&gt;使用keras建立vgg16模型&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参考官方示例&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def VGG_16(weights_path=None):
    model = Sequential()
    model.add(ZeroPadding2D((1,1),input_shape=(3,224,224)))
    model.add(Convolution2D(64, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(64, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(128, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(128, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(256, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(256, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(256, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(Flatten())
    model.add(Dense(4096, activation=&#39;relu&#39;))
    model.add(Dropout(0.5))
    model.add(Dense(4096, activation=&#39;relu&#39;))
    model.add(Dropout(0.5))
    model.add(Dense(1000, activation=&#39;softmax&#39;))

    if weights_path:
        model.load_weights(weights_path)

    return model
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;引入训练好的vgg16-weights模型&#34;&gt;引入训练好的vgg16_weights模型&lt;/h3&gt;

&lt;p&gt;**Note： **&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vgg16_weights.h5需单独下载，并与代码文件处于同一文件夹下，否则会报错。

&lt;ul&gt;
&lt;li&gt;网上有资源 附百度云盘链接 &lt;a href=&#34;http://pan.baidu.com/s/1qX0CJSC&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;vgg16_weights.h5下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = VGG_16(&#39;vgg16_weights.h5&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(optimizer=sgd, loss=&#39;categorical_crossentropy&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;猫和狗的特征&#34;&gt;猫和狗的特征&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dogs=[251, 268, 256, 253, 255, 254, 257, 159, 211, 210, 212, 214, 213, 216, 215, 219, 220, 221, 217, 218, 207, 209, 206, 205, 208, 193, 202, 194, 191, 204, 187, 203, 185, 192, 183, 199, 195, 181, 184, 201, 186, 200, 182, 188, 189, 190, 197, 196, 198, 179, 180, 177, 178, 175, 163, 174, 176, 160, 162, 161, 164, 168, 173, 170, 169, 165, 166, 167, 172, 171, 264, 263, 266, 265, 267, 262, 246, 242, 243, 248, 247, 229, 233, 234, 228, 231, 232, 230, 227, 226, 235, 225, 224, 223, 222, 236, 252, 237, 250, 249, 241, 239, 238, 240, 244, 245, 259, 261, 260, 258, 154, 153, 158, 152, 155, 151, 157, 156]
cats=[281,282,283,284,285,286,287]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;待处理文件导入&#34;&gt;待处理文件导入&lt;/h3&gt;

&lt;p&gt;**Note: **&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;将测试集改名为test，放入imgs文件夹下，imgs文件夹又与此代码处于同一文件夹下。&lt;/li&gt;
&lt;li&gt;当然，你也可以修改下面的路径。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;path = os.path.join(&#39;imgs&#39;, &#39;test&#39;, &#39;*.jpg&#39;)  #拼接路径
files = glob.glob(path) #返回路径
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义几个变量&#34;&gt;定义几个变量&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;result=[]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;flbase=0
p=0
temp=0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义图像加载函数&#34;&gt;定义图像加载函数&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def load_image(imageurl):
    im = cv2.resize(temp ,(224,224)).astype(np.float32)
    im[:,:,0] -= 103.939
    im[:,:,1] -= 116.779
    im[:,:,2] -= 123.68
    im = im.transpose((2,0,1))
    im = np.expand_dims(im,axis=0)
    return im    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义预测函数&#34;&gt;定义预测函数&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def predict(url):
    im = load_image(url)        
    out = model.predict(im)
    flbase = os.path.basename(url)
    p = np.sum(out[0,dogs]) / (np.sum(out[0,dogs]) + np.sum(out[0,cats]))
    result.append((flbase,p))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;开始预测&#34;&gt;开始预测&lt;/h3&gt;

&lt;p&gt;**Note： **
- 此处的if,else异常检测很重要，因为cv2.imread(fl)在遇到某几张图时会为空，抛出错误，程序中途停止，图片集得不到完全检测。
- 一般配置电脑跑这部分时，大约需要20～30分钟，不是程序没有工作，请耐心等待。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for fl in files:
    temp=cv2.imread(fl) 
    if  temp ==None:  
        pass
    else:
        predict(fl)    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;对结果进行排序&#34;&gt;对结果进行排序&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;result=sorted(result, key=lambda x:x[1], reverse=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;打印预测结果与相应概率&#34;&gt;打印预测结果与相应概率&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for x in result:
    print x[0],x[1]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;预测结果&#34;&gt;预测结果&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;根据上面的概率，选择相应的前多少张图片&lt;/li&gt;
&lt;li&gt;复制进csv文件，使用一般编辑器将&amp;rdquo;.jpg&amp;rdquo;以空格替代&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for x in result:
    print x[0]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;此篇文章为原创，转载请注明出处。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>高效能人士的7个习惯</title>
      <link>http://kuhungio.me/2016/%E9%AB%98%E6%95%88%E8%83%BD%E4%BA%BA%E5%A3%AB%E7%9A%847%E4%B8%AA%E4%B9%A0%E6%83%AF/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2016/%E9%AB%98%E6%95%88%E8%83%BD%E4%BA%BA%E5%A3%AB%E7%9A%847%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid>
      <description>

&lt;h1 id=&#34;第一部分-认识自我&#34;&gt;第一部分：认识自我&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;一切探索的尽头，就是重回起点。——艾略特&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;以原则为中心的思维&#34;&gt;以原则为中心的思维&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;公平的原则&lt;/li&gt;
&lt;li&gt;诚实与善良&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;以原则为中心-以品德为基础&#34;&gt;以原则为中心，以品德为基础&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;由内而外强调，先追求个人的成功，才能有人际关系的成就;先信守对自己的承诺，才能信守对他人的承诺。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;七个习惯-大纲&#34;&gt;七个习惯&amp;ndash;大纲&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;习惯一：积极主动（BE PROACTIVE)&lt;/li&gt;
&lt;li&gt;习惯二：以终为始(BEGIN WITH THE END IN MIND)&lt;/li&gt;
&lt;li&gt;习惯三：要事第一(PUT FIRST THINGS FIRST)&lt;/li&gt;
&lt;li&gt;习惯四：双赢思维(THINK WIN)&lt;/li&gt;
&lt;li&gt;习惯五：知彼解己(SEEK FIRST TOUNDERSTAND,THEN TOBE UNDERSTOOD)&lt;/li&gt;
&lt;li&gt;习惯六：统合综效(SYNERGIZE)&lt;/li&gt;
&lt;li&gt;习惯七：不断更新(SHARPEN THE SAW)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;习惯的定义&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;习惯：知识，技巧，意愿&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;成熟模式图（成长三阶段）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;阶段：依赖、独立、互赖&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有效性的定义&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;效能：产出与产能必须平衡(P/PC balance)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;第二部分-个人的成功-从依赖到独立&#34;&gt;第二部分：个人的成功：从依赖到独立&lt;/h1&gt;

&lt;h2 id=&#34;习惯一-积极主动&#34;&gt;习惯一：积极主动&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;最令人鼓舞的事实，莫过于人类确实能主动努力以提升生命价值。&amp;mdash;-卢梭&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;三种决定论&#34;&gt;三种决定论&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;基因决定论&lt;/li&gt;
&lt;li&gt;心理决定论&lt;/li&gt;
&lt;li&gt;环境决定论&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;人类的四种天赋&#34;&gt;人类的四种天赋&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;选择的自由(freedom to choose)&lt;/li&gt;
&lt;li&gt;想象力(imagination)&lt;/li&gt;
&lt;li&gt;良知(conscience)&lt;/li&gt;
&lt;li&gt;独立意志(independent conscience)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;积极主动是人类的天性&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;令人受害最深的不是悲惨的遭遇，而是&amp;rdquo;默许&amp;rdquo;那些遭遇发生在自己身上。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;积极主动与积极思考不同。积极主动不仅承认现实，也肯定人有权选择对现实环境做出积极回应。&lt;/p&gt;

&lt;h3 id=&#34;人生的三种价值&#34;&gt;人生的三种价值&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;经验价值&lt;/li&gt;
&lt;li&gt;创造价值&lt;/li&gt;
&lt;li&gt;态度价值&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;言语态度对照表&#34;&gt;言语态度对照表&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;消极被动

&lt;ul&gt;
&lt;li&gt;我已无能为力&lt;/li&gt;
&lt;li&gt;我就是这样一个人&lt;/li&gt;
&lt;li&gt;他是我怒不可遏&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;积极主动

&lt;ul&gt;
&lt;li&gt;试试看有没有其他可能性&lt;/li&gt;
&lt;li&gt;我可以选择不同的作风&lt;/li&gt;
&lt;li&gt;我可以控制自己的情绪&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;关注圈与影响圈&#34;&gt;关注圈与影响圈&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在关注圈中把个人可以控制的圈起来，形成&amp;rdquo;影响圈&amp;rdquo;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;习惯二-以终为始-自我领导的原则&#34;&gt;习惯二：以终为始 | 自我领导的原则&lt;/h2&gt;

&lt;p&gt;在做任何事之前，都得认清方向。（该方向由个人最重要的期许或价值观来决定）&lt;/p&gt;

&lt;p&gt;自我领导&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;管理是正确地做事，领导则是做正确的事．&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;直指核心
四个方向：安全感、人生方向、智慧、力量&lt;/p&gt;

&lt;h3 id=&#34;以原则为中心的特征&#34;&gt;以原则为中心的特征：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;这是主动而非被动的决定&lt;/li&gt;
&lt;li&gt;这是经过通盘考虑所得的结论，不是一时冲动&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;习惯三-要事第一-自我管理的原则&#34;&gt;习惯三：要事第一 | 自我管理的原则&lt;/h2&gt;

&lt;h3 id=&#34;四代时间管理理论的演进&#34;&gt;四代时间管理理论的演进&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重视那些重要但不紧急的事&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;人比事重要&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;善于授权:充分信任，要设置预期的效果，应遵守的规范，可用的资源，责任的归属，明确的奖罚&lt;/p&gt;

&lt;h1 id=&#34;第三部分-从独立到互赖&#34;&gt;第三部分：从独立到互赖&lt;/h1&gt;

&lt;h2 id=&#34;你不是一座孤岛&#34;&gt;你不是一座孤岛&lt;/h2&gt;

&lt;h3 id=&#34;六种感情&#34;&gt;六种感情&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;理解别人&lt;/li&gt;
&lt;li&gt;注意小节&lt;/li&gt;
&lt;li&gt;信守承诺&lt;/li&gt;
&lt;li&gt;阐明期望&lt;/li&gt;
&lt;li&gt;诚恳正直:对所有人一视同仁&lt;/li&gt;
&lt;li&gt;勇于道歉&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;一对一的人际关系&#34;&gt;一对一的人际关系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;为一个人完全奉献自己，胜过为拯救全世界而拼命&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;问题的反面是契机&lt;/p&gt;

&lt;h2 id=&#34;习惯四-双赢思维-人际领导的原则&#34;&gt;习惯四：双赢思维 | 人际领导的原则&lt;/h2&gt;

&lt;p&gt;以原则为重心比坚持立场更能致胜&lt;/p&gt;

&lt;h2 id=&#34;习惯五-知彼解己&#34;&gt;习惯五：知彼解己&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;出发点是为了理解而非为了回应&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;有效地沟通:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;同理心倾听&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;古希腊人认为，人生以品格第一，情感居次，理性第三&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;习惯六-统合综效-创造性合作的原则&#34;&gt;习惯六：统合综效 | 创造性合作的原则&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;全体大于部分的总和&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;精髓在于尊重差异，取长补短&lt;/p&gt;

&lt;p&gt;敞开胸怀，博采众议&lt;/p&gt;

&lt;h3 id=&#34;沟通三层次&#34;&gt;沟通三层次&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;自我防卫（损人利己或损己利人）&lt;/li&gt;
&lt;li&gt;彼此尊重（妥协）&lt;/li&gt;
&lt;li&gt;统合综效（利人利己）&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;第四部分-全面关照生命&#34;&gt;第四部分：全面关照生命&lt;/h1&gt;

&lt;h2 id=&#34;习惯七-不断更新-平衡的自我更新原则&#34;&gt;习惯七：不断更新 | 平衡的自我更新原则&lt;/h2&gt;

&lt;h3 id=&#34;从四个层面磨练自己&#34;&gt;从四个层面磨练自己&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;身体：耐力、灵活性、力气&lt;/li&gt;
&lt;li&gt;精神：洗涤心灵的尘埃
（在寂静的精神世界里，每天都进行着生命最大的战争）&lt;/li&gt;
&lt;li&gt;心智方面：不要停止自我教育（阅读，写作）&lt;/li&gt;
&lt;li&gt;社会情感方面：历练待人处事之道&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;第五部分-聆听良知的声音&#34;&gt;第五部分：聆听良知的声音&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;在刺激和反应之间存在着一段距离，我们成长和幸福的关键就在于如何利用这段距离&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;两条规则&#34;&gt;两条规则&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;不细究&lt;/li&gt;
&lt;li&gt;如遇伤害过重感到痛苦的情形就停止交流，等恢复再说&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;成为转型人&#34;&gt;成为转型人&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;你是一位转型人&amp;ndash;联接过去和将来的一环。你自身的变化可以影响许多后来者的生活&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;资料来源：《高效能人士的七个习惯》&amp;ndash;史蒂芬·柯维&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>