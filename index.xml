<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kuhung&#39;s Blog on Kuhung&#39;s Blog</title>
    <link>http://kuhungio.me/</link>
    <description>Recent content in Kuhung&#39;s Blog on Kuhung&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 09 Jan 2019 00:14:04 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About</title>
      <link>http://kuhungio.me/about/</link>
      <pubDate>Wed, 09 Jan 2019 00:14:04 +0800</pubDate>
      
      <guid>http://kuhungio.me/about/</guid>
      <description>

&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;笔名：谷粒 | kuhung&lt;/li&gt;
&lt;li&gt;毕业院校：华中科技大学 | 机械学院 | 本科18届&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;过往成果&#34;&gt;过往成果&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2018-08 | 第七届全国媒体技术处理大会 | 文本溯源技术测评 | &lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;95&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;2017-06 | Kaggle | Intel&amp;amp;MobileODTCervicalCancerScreening  | top10%&lt;/li&gt;
&lt;li&gt;2017-02 | DataCastle | 精准资助预测赛 | &lt;sup&gt;7&lt;/sup&gt;&amp;frasl;&lt;sub&gt;124&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;2016-12 | 2016 BYTE CUP | 国际机器学习竞赛 | &lt;sup&gt;8&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1029&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;2016-10 |  第五届全国社会媒体处理大会 | 用户画像技术测评 | &lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;373&lt;/sub&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;工作履历&#34;&gt;工作履历&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2018.07~至今 网易游戏 数据挖掘工程师&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;工作方向&#34;&gt;工作方向&lt;/h2&gt;

&lt;p&gt;数据挖掘工程师，机器学习方向。推动机器学习、深度学习等技术，落地于真实游戏运营场景。&lt;/p&gt;

&lt;p&gt;关注以下内容：&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;机器视觉&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;目标检测 | 图像描述 | 图像分类&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自然语言处理&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;情感分析 | 文本检索 | 聊天机器人&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;计算广告&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;推荐系统 | 点击率预估&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;后端平台&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AutoML | Docker&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;数据可视化&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;兴趣方向&#34;&gt;兴趣方向&lt;/h2&gt;

&lt;h2 id=&#34;联系方式&#34;&gt;联系方式&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/post/wechat.JPG&#34; alt=&#34;扫码加我&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>速查表 | Linear Algebra and Calculus 线代与微积分</title>
      <link>http://kuhungio.me/2018/algebra-calculus/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/algebra-calculus/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/algebra-calculus-1.png&#34; alt=&#34;线代与微积分速查表·一&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/algebra-calculus-2.png&#34; alt=&#34;线代与微积分速查表·二&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>速查表 | Probabilities Statistics 数理统计</title>
      <link>http://kuhungio.me/2018/probabilities-statistics/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/probabilities-statistics/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/probabilities-statistics-1.png&#34; alt=&#34;数理统计速查表·一&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/probabilities-statistics-2.png&#34; alt=&#34;数理统计速查表·二&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kuhungio.me/images/cheatsheets/probabilities-statistics-3.png&#34; alt=&#34;数理统计速查表·三&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>时序小结 | time series problem summary 时间序列问题处理</title>
      <link>http://kuhungio.me/2018/time-series-problem-summary/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2018/time-series-problem-summary/</guid>
      <description>

&lt;p&gt;Source &lt;a href=&#34;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;总结一-保证数据同分布&#34;&gt;总结一：保证数据同分布&lt;/h3&gt;

&lt;p&gt;验证集的选取，分布上应尽量靠近测试集。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方式一:：对抗验证集的生成。&lt;/li&gt;
&lt;li&gt;方式二： 就近选取相同天数。&lt;/li&gt;
&lt;li&gt;方式三:：类比属性。如本赛题 &amp;ldquo;golden week&amp;rdquo; 与 &amp;ldquo;new year&amp;rdquo; 类比，选取 &amp;ldquo;new year&amp;rdquo; 段作为验证集。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;tips: &lt;strong&gt;kfold 用在时间序列上不合适，会有数据泄露风险。正确的方法应是滑窗。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;总结二-异常值特殊处理&#34;&gt;总结二：异常值特殊处理&lt;/h3&gt;

&lt;p&gt;一些特殊的时间节点（或者说是异常值），应该予以特殊考虑。比如本次比赛中的 &amp;ldquo;golden week&amp;rdquo;.。需要对其进行变换，而不是直接依靠模型的预测结果。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;方式一:：等同法&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The rules:&lt;/p&gt;

&lt;p&gt;Treat holiday as Saturday&lt;/p&gt;

&lt;p&gt;If the day before holiday is weekday ,treat the day before holiday as Friday
If the day after holiday is weekday ,treat the day after holiday as Monday
it work not only golden week but also a lot other holidays.&lt;/p&gt;

&lt;p&gt;So the trick is from careful EDA and CV rather than luck&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;方式二:：标记法&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;days-from-holiday or days-to-holiday
or
0/1 flags whether the previous/next day and second-to-last/next-but-one day is a holiday.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;#Source https://github.com/MaxHalford/kaggle-recruit-restaurant/blob/master/Solution.ipynb

date_info = pd.read_csv(&#39;data/kaggle/date_info.csv&#39;)
date_info.rename(columns={&#39;holiday_flg&#39;: &#39;is_holiday&#39;, &#39;calendar_date&#39;: &#39;visit_date&#39;}, inplace=True)
date_info[&#39;prev_day_is_holiday&#39;] = date_info[&#39;is_holiday&#39;].shift().fillna(0)
date_info[&#39;next_day_is_holiday&#39;] = date_info[&#39;is_holiday&#39;].shift(-1).fillna(0)

date_info.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;总结三-特征构造靠倒推&#34;&gt;总结三：特征构造靠倒推&lt;/h3&gt;

&lt;p&gt;时间序列的特征生成，还是多靠 lagging 往前推的手法。&lt;/p&gt;

&lt;p&gt;Source &lt;a href=&#34;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion/49174&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting/discussion/49174&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;lagging visitors features 1-14 (by &amp;lsquo;air_store_id&amp;rsquo; and by dayOfWeek), lagging visitors features 1-14 (by &amp;lsquo;air_store_id&amp;rsquo; only), the lagging-difference visitors features 1-13, the lagging-difference-delta4 visitors features 1-10, WeightedMovingAverage for the lagging lagging visitors features, mean/median/min/max/(percentile10,30,70,90)/sum/count visitor stats features for past 14 days, 28 days, 60 days, 90 days, 120 days, 180 days, 364 days (by &amp;lsquo;air_store_id&amp;rsquo; and by dayOfWeek), mean/median/min/max/(percentile10,30,70,90)/sum/count visitor stats features for past 14 days, 28 days, 60 days, 90 days, 120 days, 180 days, 364 days (by &amp;lsquo;air_store_id&amp;rsquo; only).
or
mean weekly visitors up to lag 20 and for mean monthly visitors up to lag 8 or so&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;总结四-独立建模&#34;&gt;总结四：独立建模&lt;/h3&gt;

&lt;p&gt;模型训练。时间序列问题，一般是预测未来一段时间的情况。针对总结三中的特征生成方法，为避免过拟合，宜采用每天分开建模的方法。原因在于：靠后的时间，其特征依赖前面的预测结果来生成。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;个人感想&#34;&gt;个人感想&lt;/h4&gt;

&lt;p&gt;取得好效果，大多数时间靠的不是复杂的模型、不是复杂的CV方式，而是&lt;strong&gt;对数据的观察&lt;/strong&gt;（如： holiday trick 加公开的 kernel， 就可以取得银牌的成绩）以及&lt;strong&gt;特征构造方面的实践&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top solutions are rather simple.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Single Shot MultiBox Detector Keras version</title>
      <link>http://kuhungio.me/2017/ssd/</link>
      <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2017/ssd/</guid>
      <description>

&lt;h1 id=&#34;ssd目标检测keras版&#34;&gt;SSD目标检测Keras版&lt;/h1&gt;

&lt;p&gt;SSD是一种Object Detection方法。本文是基于论文&lt;a href=&#34;http://arxiv.org/abs/1512.02325&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SSD: Single Shot MultiBox Detector&lt;/a&gt;，实现的keras版本。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;该文章在既保证速度，又要保证精度的情况下，提出了SSD物体检测模型，与现在流行的检测模型一样，将检测过程整个成一个single deep neural network。便于训练与优化，同时提高检测速度。
SSD将输出一系列离散化（discretization）的bounding boxes，这些bounding boxes是在不同层次（layers）上的feature maps上生成的，并且有着不同的aspect ratio。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;模型效果&#34;&gt;模型效果&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模型对载具的检测
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Aeroplane.png&#34; height=&#34;300&#34;&gt;
&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Bicycle.png&#34; height=&#34;300&#34;&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;模型对动物的检测
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Dog.png&#34; height=&#34;300&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/Cat.png&#34; height=&#34;300&#34;&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;模型的视频检测
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://github.com/kuhung/SSD_keras/raw/master/output/car.gif&#34;&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;如何使用&#34;&gt;如何使用&lt;/h2&gt;

&lt;p&gt;项目地址&lt;a href=&#34;https://github.com/kuhung/SSD_keras&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;kuhung/SSD_keras&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;所需依赖&#34;&gt;所需依赖&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cv2==3.3.0
keras==1.2.2
matplotlib==2.1.0
tensorflow==1.3.0
numpy==1.13.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果想跑通视频模块，则需额外&lt;code&gt;pip install scikit-video&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;具体操作&#34;&gt;具体操作&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:kuhung/SSD_keras.git
cd SSD_keras
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Download model weight &lt;code&gt;weights_SSD300.hdf5&lt;/code&gt;&lt;a href=&#34;https://github.com/kuhung/SSD_keras/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp weights_SSD300.hdf5 into SSD_keras
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;对于图片的检测&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考SSD.ipynb&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;若要剪切图片为下一步处理做准备&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考SSD_crop.py&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;检测视频
&lt;code&gt;bash
cd video_utils
python videotest_example.py hy.mp4
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;参考资料&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://arxiv.org/abs/1512.02325&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SSD: Single Shot MultiBox Detector&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/u010167269/article/details/52563573&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;论文阅读：SSD: Single Shot MultiBox Detector&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rykov8/ssd_keras&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;rykov8/ssd_keras&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cats VS. Dogs 图像分类之猫狗大战</title>
      <link>http://kuhungio.me/2016/%E7%8C%AB%E7%8B%97%E5%A4%A7%E6%88%98/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2016/%E7%8C%AB%E7%8B%97%E5%A4%A7%E6%88%98/</guid>
      <description>

&lt;p&gt;我是参加DataCastle猫狗大战的选手，kuhung。在测评中，我提交的数据集最后评分0.98639。以下是我的备战过程及心得体会。（最后有完整代码及较全面的注释）&lt;/p&gt;

&lt;h2 id=&#34;个人介绍&#34;&gt;个人介绍&lt;/h2&gt;

&lt;p&gt;华中科技大学机械学院的大二（准大三）学生，接触数据挖掘快有一年了。早期在学生团队做过一些D3数据可视化方面的工作，今年上半年开始数据挖掘实践。想把这个爱好发展成事业。做过阿里的天池竞赛，也有在kaggle混迹。算个数据新手，但一直不承认：你是新人，所以成绩不好看没啥关系。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;初识比赛&#34;&gt;初识比赛&lt;/h2&gt;

&lt;p&gt;第一次接触数据集，就感觉有些难度。因为以前没做过图片分类的比赛，更没想过要用深度学习的神经网络进行识别。思索一番，还是觉得特征提取后，使用决策树靠谱。自己也下去找过资料，发现并不容易实现。期间，还曾一度想过肉眼识别。但打开文件，看到那1400+图片，就觉得这时间花在肉眼识别上不值。中间一度消停。&lt;/p&gt;

&lt;h2 id=&#34;初见曙光-yinjh战队分享&#34;&gt;初见曙光——yinjh战队分享&lt;/h2&gt;

&lt;p&gt;后来上论坛逛过几次。一次偶然的机会，让我看到了yinjh团队分享的vgg16模型。乍一看，代码简单、效果不错。更为重要的是，这个模型自己以前从未见过。于是抱着验证学习的态度，我把代码扣了下来，打算自己照着做一遍。&lt;/p&gt;

&lt;h2 id=&#34;过程艰难&#34;&gt;过程艰难&lt;/h2&gt;

&lt;p&gt;一开始，我就把一屏的代码放进了我的jupyter notebook中，一步一步试水。很明显，我的很多依赖包都没安装，所以也是错误不断。早先是在Windows系统下，使用python2.7，需要什么包，就安装什么包。在安装keras过程中，我发现了Anaconda——很好用的一个科学计算环境，集成了各种数据挖掘包。即使是这样，仍然是满屏的错误，亟待排查。&lt;/p&gt;

&lt;h2 id=&#34;步步优化&#34;&gt;步步优化&lt;/h2&gt;

&lt;p&gt;离比赛截止就还只有几天，一边准备期末考试，一边焦急地排查bug。Windows系统下仍有个别难以解决的错误，我索性切换到了做NAO机器人时装的Ubuntu系统下。结合keras给的官方文档，我对原代码进行了函数拆分解耦，又在循环体部分增加了异常检测。综合考虑性能，稍微修改了循环结构。下载好训练的vgg16_weights，在没有错误之后，焦急地等待25分钟后，屏幕开始打印结果。&lt;/p&gt;

&lt;h2 id=&#34;欣喜万分&#34;&gt;欣喜万分&lt;/h2&gt;

&lt;p&gt;第一次提交，随便截取了前面一段，没成绩。折腾了几次，才发现是提交的格式出了问题。后面取p=0.99+部分，提交结果在0.58左右，数据集大概有90个。估计了下，狗狗总数应该在180左右。第二次提交，取了180左右，结果0.97多一点。第三次，也是最后一次提交，取了result前189个，结果0.98639，一举升到第一。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;比赛总结&#34;&gt;比赛总结&lt;/h3&gt;

&lt;p&gt;这次比赛，首先还得感谢yinjh团队的yin前辈。如果没有您分享的代码，就不会有我今天的成绩。感谢您分享的代码，感想您在我写这篇分享时提供的代码指导。
再者，感谢我的女票晶晶，谢谢你一直陪在我身边，谢谢你包容我写代码时不那么快的回复手速。我是新手，但我一直不觉得成绩低是理所当。立志从事这一行，就需要快速地学习、快速地成长。新人，也需要做到最好。当然，自己目前还存在很多问题。一些基本的概念只是模糊掌握，需要更多的实践，需要更多的理论积淀，而不是简单地做一个调包侠。&lt;/p&gt;

&lt;h3 id=&#34;给新手的建议&#34;&gt;给新手的建议&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;善用搜索引擎，多读官方文档，不要一开始就依赖Google。&lt;/li&gt;
&lt;li&gt;Google Groups、Stack Overflow、GitHub是好东西。&lt;/li&gt;
&lt;li&gt;干！就是干！&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;完整代码&#34;&gt;完整代码&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;以下操作均在Ubuntu14.04+Anaconda中进行&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;导入python标准包&#34;&gt;导入python标准包&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os   # 处理字符串路径
import glob  # 用于查找文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;导入相关库&#34;&gt;导入相关库&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;keras&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;keras是基于Theano的深度学习(Deep Learning)框架&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;详细信息请见&lt;a href=&#34;http://keras.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;keras官方文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;安装过程&#34;&gt;安装过程&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;conda update conda&lt;/p&gt;

&lt;p&gt;conda update &amp;ndash;all&lt;/p&gt;

&lt;p&gt;conda install mingw libpython&lt;/p&gt;

&lt;p&gt;pip install git+git://github.com/Theano/Theano.git&lt;/p&gt;

&lt;p&gt;pip install git+git://github.com/fchollet/keras.git&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;cv2&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenCV库&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;conda isntall opnecv&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;numpy&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anaconda自带&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from keras.models import Sequential
from keras.layers.core import Flatten, Dense, Dropout
from keras.layers.convolutional import Convolution2D, MaxPooling2D, ZeroPadding2D
from keras.optimizers import SGD
import cv2, numpy as np
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用keras建立vgg16模型&#34;&gt;使用keras建立vgg16模型&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参考官方示例&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def VGG_16(weights_path=None):
    model = Sequential()
    model.add(ZeroPadding2D((1,1),input_shape=(3,224,224)))
    model.add(Convolution2D(64, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(64, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(128, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(128, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(256, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(256, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(256, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(ZeroPadding2D((1,1)))
    model.add(Convolution2D(512, 3, 3, activation=&#39;relu&#39;))
    model.add(MaxPooling2D((2,2), strides=(2,2)))

    model.add(Flatten())
    model.add(Dense(4096, activation=&#39;relu&#39;))
    model.add(Dropout(0.5))
    model.add(Dense(4096, activation=&#39;relu&#39;))
    model.add(Dropout(0.5))
    model.add(Dense(1000, activation=&#39;softmax&#39;))

    if weights_path:
        model.load_weights(weights_path)

    return model
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;引入训练好的vgg16-weights模型&#34;&gt;引入训练好的vgg16_weights模型&lt;/h3&gt;

&lt;p&gt;**Note： **&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vgg16_weights.h5需单独下载，并与代码文件处于同一文件夹下，否则会报错。

&lt;ul&gt;
&lt;li&gt;网上有资源 附百度云盘链接 &lt;a href=&#34;http://pan.baidu.com/s/1qX0CJSC&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;vgg16_weights.h5下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = VGG_16(&#39;vgg16_weights.h5&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(optimizer=sgd, loss=&#39;categorical_crossentropy&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;猫和狗的特征&#34;&gt;猫和狗的特征&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dogs=[251, 268, 256, 253, 255, 254, 257, 159, 211, 210, 212, 214, 213, 216, 215, 219, 220, 221, 217, 218, 207, 209, 206, 205, 208, 193, 202, 194, 191, 204, 187, 203, 185, 192, 183, 199, 195, 181, 184, 201, 186, 200, 182, 188, 189, 190, 197, 196, 198, 179, 180, 177, 178, 175, 163, 174, 176, 160, 162, 161, 164, 168, 173, 170, 169, 165, 166, 167, 172, 171, 264, 263, 266, 265, 267, 262, 246, 242, 243, 248, 247, 229, 233, 234, 228, 231, 232, 230, 227, 226, 235, 225, 224, 223, 222, 236, 252, 237, 250, 249, 241, 239, 238, 240, 244, 245, 259, 261, 260, 258, 154, 153, 158, 152, 155, 151, 157, 156]
cats=[281,282,283,284,285,286,287]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;待处理文件导入&#34;&gt;待处理文件导入&lt;/h3&gt;

&lt;p&gt;**Note: **&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;将测试集改名为test，放入imgs文件夹下，imgs文件夹又与此代码处于同一文件夹下。&lt;/li&gt;
&lt;li&gt;当然，你也可以修改下面的路径。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;path = os.path.join(&#39;imgs&#39;, &#39;test&#39;, &#39;*.jpg&#39;)  #拼接路径
files = glob.glob(path) #返回路径
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义几个变量&#34;&gt;定义几个变量&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;result=[]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;flbase=0
p=0
temp=0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义图像加载函数&#34;&gt;定义图像加载函数&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def load_image(imageurl):
    im = cv2.resize(temp ,(224,224)).astype(np.float32)
    im[:,:,0] -= 103.939
    im[:,:,1] -= 116.779
    im[:,:,2] -= 123.68
    im = im.transpose((2,0,1))
    im = np.expand_dims(im,axis=0)
    return im    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义预测函数&#34;&gt;定义预测函数&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def predict(url):
    im = load_image(url)        
    out = model.predict(im)
    flbase = os.path.basename(url)
    p = np.sum(out[0,dogs]) / (np.sum(out[0,dogs]) + np.sum(out[0,cats]))
    result.append((flbase,p))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;开始预测&#34;&gt;开始预测&lt;/h3&gt;

&lt;p&gt;**Note： **
- 此处的if,else异常检测很重要，因为cv2.imread(fl)在遇到某几张图时会为空，抛出错误，程序中途停止，图片集得不到完全检测。
- 一般配置电脑跑这部分时，大约需要20～30分钟，不是程序没有工作，请耐心等待。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for fl in files:
    temp=cv2.imread(fl) 
    if  temp ==None:  
        pass
    else:
        predict(fl)    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;对结果进行排序&#34;&gt;对结果进行排序&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;result=sorted(result, key=lambda x:x[1], reverse=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;打印预测结果与相应概率&#34;&gt;打印预测结果与相应概率&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for x in result:
    print x[0],x[1]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;预测结果&#34;&gt;预测结果&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;根据上面的概率，选择相应的前多少张图片&lt;/li&gt;
&lt;li&gt;复制进csv文件，使用一般编辑器将&amp;rdquo;.jpg&amp;rdquo;以空格替代&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for x in result:
    print x[0]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;此篇文章为原创，转载请注明出处。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>高效能人士的7个习惯</title>
      <link>http://kuhungio.me/2016/%E9%AB%98%E6%95%88%E8%83%BD%E4%BA%BA%E5%A3%AB%E7%9A%847%E4%B8%AA%E4%B9%A0%E6%83%AF/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://kuhungio.me/2016/%E9%AB%98%E6%95%88%E8%83%BD%E4%BA%BA%E5%A3%AB%E7%9A%847%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid>
      <description>

&lt;h1 id=&#34;第一部分-认识自我&#34;&gt;第一部分：认识自我&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;一切探索的尽头，就是重回起点。——艾略特&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;以原则为中心的思维&#34;&gt;以原则为中心的思维&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;公平的原则&lt;/li&gt;
&lt;li&gt;诚实与善良&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;以原则为中心-以品德为基础&#34;&gt;以原则为中心，以品德为基础&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;由内而外强调，先追求个人的成功，才能有人际关系的成就;先信守对自己的承诺，才能信守对他人的承诺。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;七个习惯-大纲&#34;&gt;七个习惯&amp;ndash;大纲&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;习惯一：积极主动（BE PROACTIVE)&lt;/li&gt;
&lt;li&gt;习惯二：以终为始(BEGIN WITH THE END IN MIND)&lt;/li&gt;
&lt;li&gt;习惯三：要事第一(PUT FIRST THINGS FIRST)&lt;/li&gt;
&lt;li&gt;习惯四：双赢思维(THINK WIN)&lt;/li&gt;
&lt;li&gt;习惯五：知彼解己(SEEK FIRST TOUNDERSTAND,THEN TOBE UNDERSTOOD)&lt;/li&gt;
&lt;li&gt;习惯六：统合综效(SYNERGIZE)&lt;/li&gt;
&lt;li&gt;习惯七：不断更新(SHARPEN THE SAW)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;习惯的定义&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;习惯：知识，技巧，意愿&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;成熟模式图（成长三阶段）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;阶段：依赖、独立、互赖&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有效性的定义&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;效能：产出与产能必须平衡(P/PC balance)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;第二部分-个人的成功-从依赖到独立&#34;&gt;第二部分：个人的成功：从依赖到独立&lt;/h1&gt;

&lt;h2 id=&#34;习惯一-积极主动&#34;&gt;习惯一：积极主动&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;最令人鼓舞的事实，莫过于人类确实能主动努力以提升生命价值。&amp;mdash;-卢梭&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;三种决定论&#34;&gt;三种决定论&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;基因决定论&lt;/li&gt;
&lt;li&gt;心理决定论&lt;/li&gt;
&lt;li&gt;环境决定论&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;人类的四种天赋&#34;&gt;人类的四种天赋&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;选择的自由(freedom to choose)&lt;/li&gt;
&lt;li&gt;想象力(imagination)&lt;/li&gt;
&lt;li&gt;良知(conscience)&lt;/li&gt;
&lt;li&gt;独立意志(independent conscience)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;积极主动是人类的天性&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;令人受害最深的不是悲惨的遭遇，而是&amp;rdquo;默许&amp;rdquo;那些遭遇发生在自己身上。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;积极主动与积极思考不同。积极主动不仅承认现实，也肯定人有权选择对现实环境做出积极回应。&lt;/p&gt;

&lt;h3 id=&#34;人生的三种价值&#34;&gt;人生的三种价值&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;经验价值&lt;/li&gt;
&lt;li&gt;创造价值&lt;/li&gt;
&lt;li&gt;态度价值&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;言语态度对照表&#34;&gt;言语态度对照表&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;消极被动

&lt;ul&gt;
&lt;li&gt;我已无能为力&lt;/li&gt;
&lt;li&gt;我就是这样一个人&lt;/li&gt;
&lt;li&gt;他是我怒不可遏&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;积极主动

&lt;ul&gt;
&lt;li&gt;试试看有没有其他可能性&lt;/li&gt;
&lt;li&gt;我可以选择不同的作风&lt;/li&gt;
&lt;li&gt;我可以控制自己的情绪&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;关注圈与影响圈&#34;&gt;关注圈与影响圈&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在关注圈中把个人可以控制的圈起来，形成&amp;rdquo;影响圈&amp;rdquo;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;习惯二-以终为始-自我领导的原则&#34;&gt;习惯二：以终为始 | 自我领导的原则&lt;/h2&gt;

&lt;p&gt;在做任何事之前，都得认清方向。（该方向由个人最重要的期许或价值观来决定）&lt;/p&gt;

&lt;p&gt;自我领导&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;管理是正确地做事，领导则是做正确的事．&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;直指核心
四个方向：安全感、人生方向、智慧、力量&lt;/p&gt;

&lt;h3 id=&#34;以原则为中心的特征&#34;&gt;以原则为中心的特征：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;这是主动而非被动的决定&lt;/li&gt;
&lt;li&gt;这是经过通盘考虑所得的结论，不是一时冲动&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;习惯三-要事第一-自我管理的原则&#34;&gt;习惯三：要事第一 | 自我管理的原则&lt;/h2&gt;

&lt;h3 id=&#34;四代时间管理理论的演进&#34;&gt;四代时间管理理论的演进&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重视那些重要但不紧急的事&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;人比事重要&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;善于授权:充分信任，要设置预期的效果，应遵守的规范，可用的资源，责任的归属，明确的奖罚&lt;/p&gt;

&lt;h1 id=&#34;第三部分-从独立到互赖&#34;&gt;第三部分：从独立到互赖&lt;/h1&gt;

&lt;h2 id=&#34;你不是一座孤岛&#34;&gt;你不是一座孤岛&lt;/h2&gt;

&lt;h3 id=&#34;六种感情&#34;&gt;六种感情&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;理解别人&lt;/li&gt;
&lt;li&gt;注意小节&lt;/li&gt;
&lt;li&gt;信守承诺&lt;/li&gt;
&lt;li&gt;阐明期望&lt;/li&gt;
&lt;li&gt;诚恳正直:对所有人一视同仁&lt;/li&gt;
&lt;li&gt;勇于道歉&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;一对一的人际关系&#34;&gt;一对一的人际关系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;为一个人完全奉献自己，胜过为拯救全世界而拼命&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;问题的反面是契机&lt;/p&gt;

&lt;h2 id=&#34;习惯四-双赢思维-人际领导的原则&#34;&gt;习惯四：双赢思维 | 人际领导的原则&lt;/h2&gt;

&lt;p&gt;以原则为重心比坚持立场更能致胜&lt;/p&gt;

&lt;h2 id=&#34;习惯五-知彼解己&#34;&gt;习惯五：知彼解己&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;出发点是为了理解而非为了回应&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;有效地沟通:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;同理心倾听&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;古希腊人认为，人生以品格第一，情感居次，理性第三&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;习惯六-统合综效-创造性合作的原则&#34;&gt;习惯六：统合综效 | 创造性合作的原则&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;全体大于部分的总和&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;精髓在于尊重差异，取长补短&lt;/p&gt;

&lt;p&gt;敞开胸怀，博采众议&lt;/p&gt;

&lt;h3 id=&#34;沟通三层次&#34;&gt;沟通三层次&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;自我防卫（损人利己或损己利人）&lt;/li&gt;
&lt;li&gt;彼此尊重（妥协）&lt;/li&gt;
&lt;li&gt;统合综效（利人利己）&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;第四部分-全面关照生命&#34;&gt;第四部分：全面关照生命&lt;/h1&gt;

&lt;h2 id=&#34;习惯七-不断更新-平衡的自我更新原则&#34;&gt;习惯七：不断更新 | 平衡的自我更新原则&lt;/h2&gt;

&lt;h3 id=&#34;从四个层面磨练自己&#34;&gt;从四个层面磨练自己&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;身体：耐力、灵活性、力气&lt;/li&gt;
&lt;li&gt;精神：洗涤心灵的尘埃
（在寂静的精神世界里，每天都进行着生命最大的战争）&lt;/li&gt;
&lt;li&gt;心智方面：不要停止自我教育（阅读，写作）&lt;/li&gt;
&lt;li&gt;社会情感方面：历练待人处事之道&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;第五部分-聆听良知的声音&#34;&gt;第五部分：聆听良知的声音&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;在刺激和反应之间存在着一段距离，我们成长和幸福的关键就在于如何利用这段距离&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;两条规则&#34;&gt;两条规则&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;不细究&lt;/li&gt;
&lt;li&gt;如遇伤害过重感到痛苦的情形就停止交流，等恢复再说&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;成为转型人&#34;&gt;成为转型人&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;你是一位转型人&amp;ndash;联接过去和将来的一环。你自身的变化可以影响许多后来者的生活&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;资料来源：《高效能人士的七个习惯》&amp;ndash;史蒂芬·柯维&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>