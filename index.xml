<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kuhung&#39;s Blog on Kuhung&#39;s Blog</title>
    <link>https://kuhungio.me/</link>
    <description>Recent content in Kuhung&#39;s Blog on Kuhung&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 25 Jul 2020 20:43:52 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2020高考志愿填报中的数据误导与价值机会</title>
      <link>https://kuhungio.me/2020/statistics-tell-lies/</link>
      <pubDate>Sat, 25 Jul 2020 20:43:52 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/statistics-tell-lies/</guid>
      <description>&lt;p&gt;。2020，迟到的高考，还是落下帷幕，紧接着，就是志愿填报环节。想起自己当年，突然要选择自己的专业，那是慌得不行。草草的根据自己分数，划了几条线，填了武大、华科、同济、天大，然后又在最后一刻，将华科调到了最前面。于是，就这样来到了华科机械大类下的测控专业。&lt;/p&gt;

&lt;p&gt;虽然高考发榜，已经有几日。这篇文章姗姗来迟。还是希望，给各位考生朋友，补充有价值的信息。2020，迟到的高考，落下帷幕。紧接着，就是志愿填报环节。想起自己当年，突然要选择自己的专业，那是慌得不行。草草的根据自己分数，划了几条线，填了武大、华科、同济、天大。然后又在最后一刻，决定学门手艺。将华科调到了最前面，并且选择了目前的专业，一个名字听起来很酷的专业。于是，就这样来到了华科机械大类下的测控专业。&lt;/p&gt;

&lt;p&gt;但是，在度过四年时光后，却没有选择机械，而是选择了互联网。一方面，是原专业的就业环境，与志愿填报时的预期不符；相信每一位机械同学，都是想着做酷炫的机器人、或者是参与“大国重器”的建设中来；但实际上，即使是华科，机械全国前三，可选择的余地也不多。另一方面，是薪资成长性，传统机械，十年磨一剑，适合耐得住寂寞，有家底的同学。而就在刚刚，在专业大群里，惊闻自己这个专业，今年不再招生。&lt;/p&gt;

&lt;p&gt;以上，足以见得：志愿填报，和投胎一样，也是个技术活。个人努力，行业趋势，两者不可相悖。选择，某种程度上，比努力重要。有效决策，能放大努力的价值；浮于表面的选择，则会冲淡寒窗苦读的日夜。&lt;/p&gt;

&lt;p&gt;志愿填报，就是个决策问题。决策过程，一般是多方面因素的聚合，最终反应决策体的综合认知。一般来说，会是感性的认知+历史的数据。但是，并不是所有人，都能做出好的决策。即使是年长的父辈，虽然在其他方面，做出了很棒的决策。但受限于其人生经历，在志愿填报上，也可能会做出次优的决策。&lt;/p&gt;

&lt;p&gt;好在，人类的长处，就是从别人那里吸取教训。他山之石，可以攻玉。&lt;/p&gt;

&lt;p&gt;让我们抽丝拨茧，从不同角度，挖掘志愿填报中的“天坑”与机遇。&lt;/p&gt;

&lt;p&gt;第一个“坑”，获得性偏差。&lt;/p&gt;

&lt;p&gt;获得性偏差，是一类感性偏差。通俗来讲，就是：在没看到黑天鹅之前，以为所有天鹅都是白色的。&lt;/p&gt;

&lt;p&gt;想自己填报志愿那年，家父说：隔壁村老李的儿子，填了重大（重庆大学）的土木，12年毕业，没两年就重庆买房了。所以，你也去填土木吧。&lt;/p&gt;

&lt;p&gt;咱先不说，乡里乡亲的习惯性夸大。看看现在的房价，似乎有道理。但别忘了，中间15年也有一波下挫。回望08年次贷危机，为提振经济，国家拨了大量资金，流向基础建设。那几年，土木着实赚钱。但产能逐渐加码，没有宏观调控，势必过剩。没过几年，商品房库存开始堆积。家父肯定没那么神机妙算，能猜到后面的货币化安置。那么，我看到了当时的产能风险了？也不是，单纯想往机械钻&amp;hellip;&lt;/p&gt;

&lt;p&gt;而我想往机械钻的念头，也不是无中生有。来自于众多宣传片的鼓舞。这其中，少不了一只飞虫拍三集的《走近科学》；以及鼓舞人心的《大国工匠》。这些片子的出发点是好的，激发国民的好奇心，弘扬钻研精神。也要感谢他们，社会才不至于太浮躁。但是，同样的，行业的枯燥、重资产轻人工，却没能显露出来。这些问题不暴露，不是说无关轻重，而是默认，每个人都知道。但是对于一个学生，如果没有高人指点，他知道的，只能是他看到的。&lt;/p&gt;

&lt;p&gt;上面两个例子，说的就是获得性偏差。这样的例子，不仅出现在志愿填报。想想看，我们的日常决策、企业决策，是不是也有很多？&lt;/p&gt;

&lt;p&gt;&amp;lt;&amp;mdash; 这是获得性偏差，也是经济的大周期循环。从这个故事里，我们总结出两条经验：1. 获得性偏差广泛存在，不能拿个例说事。2. 个人的选择，要和大的周期相关。同时，胆子大也不怕，做行业的轮动。整体来说，行业都是均值回归的。无论如何偏离，除非是这个行业完全被取代，都会存在回归现象。&amp;mdash;&amp;gt;&lt;/p&gt;

&lt;p&gt;第二个“坑”，数据误导。&lt;/p&gt;

&lt;p&gt;第一个是，用有限的小样本，代替整体样本。最有代表性的，就是各类软件培训机构。如今，大家都知道，搞互联网IT，表面上比其他行业挣钱。这催生了大量培训机构。在招生简章中，可以看到：某某学员，以xx万入职xx公司。这一听，好像几个月工资就能回本。但他玩的就是有限样本的把戏。尚且不说，这某某学员是否真实存在；即使他存在，也不能代表真实的期望。数学中的期望，不是拿最好的来说事。一般人，正态分布到两端的概率，十分之小。&lt;/p&gt;

&lt;p&gt;第二个是，用各种不一的口径，暗示自己很强。没错，这里说的就是各类大学排行榜。今天你出个排行榜，说自己很强；明天xx机构，又出个排行榜，排名一下发生巨大变化。大学排名，可以参考，但也不能全信。评级机构的公信力，很多都无法考证。最近还流行，将各个排名取平均，显得很客观，但实际，其中的加权怎么定，重合的指标有无剔除，混合排名的人，可能自己都不知道。相较而言，各榜水平稳定的高校，买榜的概率更小。比如：清华和北大，稳居前二。如果你不能识别，那就最好不要花太多时间在上面。&lt;/p&gt;

&lt;p&gt;第三个“坑”，暗示因果。&lt;/p&gt;

&lt;p&gt;暗示因果的最强例子，就是分数了。一般来说，大伙儿都会参考去前年的录取分数、最低录取位次，以此来判断这所学校的价值。这里有一个假设：即分数高的学校，是好学校。分数高的专业，是好专业。其中深层次的假设是，分数高的人，所作的决策是明智的、充分掌握信息的。还有一个，是分数充分反应市场热度。但其实，这几个假设，有相关性、但没有强因果性。因为，分数高的人，他的信息也不全面。他在这场博弈中，掌握的只是先手机会。而于此同时，操作最低录取分数，已经成为了潜规则。冷门专业放提前批，或者换个紧跟潮流的名字，都能大幅提高最低录取分数。&lt;/p&gt;

&lt;p&gt;还有暗示因果的，就是名字。这样的情况，多出现于xx大学xx学院，或者是xx大学合作办学。虽然这样的情况，在最近几年有所收敛，但大着其他学校幌子招生，还大有人在。对于这样的学校，其实名字中就已经存在溢价。除非你对该院校很熟悉，做过充分调研，可以选择报考。尽量避免望文生义，根据一些名字上的关联，联想出一些不存在的关联。&lt;/p&gt;

&lt;p&gt;最后，说了这么多，上面是一些坑点。而于此同时，也存在价值机会。就大学所观察，不同大学，在不同地区，其录取排名并非一致。这说明，不同地区人，对该大学认知程度不一。在综合考虑地域远近，以及投放招生指标的前提下，寻找在当地被低估的外地学校，是一种值得尝试的方法。因为，据观察，留在大学所在地工作的，占比很小。除了北上广，其余地区的大学，都是给一线输送人才。选大学，不等于选择了后半生的定居地。&lt;/p&gt;

&lt;p&gt;另一个方面，建议在自由度上多花功夫。这里的自由，并不是指自由逃课、管理松散。自由度，在机械机构中，往往指机构可能的运行的空间。在机械设计中，越多的自由度，代表能做越多的事情。在选择专业上，我的看法类似：应当保证充分的自由度。原因如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;学生对于专业的认知，多源于综合信息，本身的匹配程度不可知。&lt;/li&gt;
&lt;li&gt;充分的专业自由，学习自由，有助于帮助学生认识自我。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;自由度在专业上的体现，就在于：提供机会转专业、能够跨专业大类选择。可能有些高分考生不认同这点，认为：考这么高，还去选择通识大类，不是浪费机会吗？确实如此。但如果选的专业，不是理想的那样，再高的分数，也只是过去式。&lt;/p&gt;

&lt;p&gt;其实，自由度还在其他方面有体现。北上广的火热，究其原因，还是提供了视野的自由度。更前沿的市场环境、更多的就业机会。这些都是在提供自由度。于此同时，综合类院校、大力发展文科的理工科院校，也是在保证思想的自由度。巴菲特的得力投资伙伴，查理曾说过，跨学科的思维，帮助他赢得了投资的成功。&lt;/p&gt;

&lt;p&gt;最后，无论填报结果如何，这都不是一锤子的买卖。进入好的大学、好的专业，不代表后半生就安稳了。进入不理想的专业，也不代表，后半生就玩完。没有永远的避风港，坚持刻意练习，积累职场竞争力，才是最优方案。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>云游戏，会是反作弊的银弹吗？</title>
      <link>https://kuhungio.me/2020/game_anti-cheat/</link>
      <pubDate>Thu, 18 Jun 2020 23:18:26 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/game_anti-cheat/</guid>
      <description>

&lt;p&gt;游戏反作弊，一直是各大游戏厂商头疼的问题。究其根本，游戏，本身是一种软件产品。交付到用户侧时，你永远无法穷举，玩家会怎么使用它。只要有利可图，就会有人去钻空子。&lt;/p&gt;

&lt;p&gt;为了反作弊，各大厂商，也是用尽各种手段。除了内部的反作弊团队，还有法务团队的律师函警告，甚至直接招安外挂开发者。说到底，游戏反作弊，有没有一个终极方案呢？&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;数据挖掘，说是近5年的火热技术，没得跑的，甚至连电视剧里，都开始出现这个职业的主配角。&lt;/p&gt;

&lt;p&gt;这个职业，被寄希望于做炫酷的事：&lt;strong&gt;在庞杂的用户数据中，找到其特有的规律，找到导致现状的原因、预测未来的发展。&lt;/strong&gt;数据挖掘，在游戏反作弊，可以做些什么吗？&lt;/p&gt;

&lt;h2 id=&#34;数据挖掘&#34;&gt;数据挖掘&lt;/h2&gt;

&lt;h3 id=&#34;整体行业概况&#34;&gt;整体行业概况&lt;/h3&gt;

&lt;p&gt;数据挖掘行业，如今有如下两个趋势：一个是计算广告，及其相关的推荐系统。这套东西，是信息流产品的核心。扩展开来，包括用户画像、用户生命周期等内容。&lt;/p&gt;

&lt;p&gt;另一个，集中在敏感内容、反欺诈的识别上。这个方向，只要用户生产内容，就不可避免。换而言之，是 UGC 内容平台、活动平台的刚需。同时他又是一个劳动密集型工作，很适合用机器节省人力。&lt;/p&gt;

&lt;h3 id=&#34;游戏中的数据挖掘&#34;&gt;游戏中的数据挖掘&lt;/h3&gt;

&lt;p&gt;在游戏领域，数据挖掘又分为两个大方向。各个公司的AI lab，会去研究一些前沿技术。诸如强化学习、或者是迁移学习的事。满足玩家个性化的需求。其特点是：前瞻性强，复用性高，但落地困难。&lt;/p&gt;

&lt;p&gt;而在业务侧，围绕玩家生命周期展开：渠道转化预估，异常渠道的识别、高潜玩家发现、流失的预测等。其特点：复杂多样、垂直性强，常需要单独建模。&lt;/p&gt;

&lt;p&gt;游戏内，对于一个用户的刻画，十分具体。从基本的在线、消费；到玩法偏好、好友关系，都会有专门的标签画像。这些画像，帮助企业更好理解玩家，提供更细致的服务，达到 win-win 的目的。&lt;/p&gt;

&lt;p&gt;对于多产品的公司（如：网易），数据互通，是其最迫切的需求。各产品数据独立，制约了它的社交属性，虽然在“洗用户”上表现克制，但数据资源白白浪费。如果是一家正在扩张业务线的公司，需提早防范：数据壁垒的出现。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;如果把游戏反作弊抽象，实际也是风险控制的一个环节。风险控制有哪些注意事项？它的核心是什么，又该如何去应对挑战呢？理解风控的这些知识，有助于我们做好反作弊。&lt;/p&gt;

&lt;p&gt;近现代风控，起源于二战后。而后迅速发展，形成以：金融业风控为代表的垂直学科。而随着80年代互联网的发展壮大，各类风险，也随之而至。&lt;/p&gt;

&lt;p&gt;如今，互联网上的羊毛党，垃圾信息、黑产随处可见。和正常内容，争夺着用户的注意力。同时也影响着业务安全。在业务侧，安全业务可分为两类：一类是静态的账号、内容安全；另一类则是动态的行为安全，诸如活动安全等。&lt;/p&gt;

&lt;h2 id=&#34;风控领域浅析&#34;&gt;风控领域浅析&lt;/h2&gt;

&lt;h3 id=&#34;风控的核心&#34;&gt;风控的核心&lt;/h3&gt;

&lt;p&gt;谈起金融的核心，大家的第一个念头，一定是风控。而风控的核心，则是成本控制。而成本，则不是简单的金钱成本。除了财力、物力、人力，这样的企业端成本，还应该注意，用户侧的成本。比如：用户体验的成本。&lt;/p&gt;

&lt;p&gt;如今，互联网上，打开app前10s流失的用户，其数量之大，很可能超乎你的想象。如果为了风险控制，而过分牺牲用户体验，其实是得不偿失的。如12306的验证码，它的本意是防范刷票风险，若图库的区分度小到极端，则是过分牺牲了用户体验。&lt;/p&gt;

&lt;p&gt;除了资源成本和用户体验成本，还有一个容易忽视的，是企业的信用成本。虽然互联网的记忆，只有短短7天；玩弄话术，运用公关手段，能够消除一时的风险。但对企业长期的公信力，其实是一种消磨。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;产品出问题了，还可以修补。信用丢了，那就找不回了。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;风控的挑战与应对&#34;&gt;风控的挑战与应对&lt;/h3&gt;

&lt;p&gt;风控，显著性地，不同于其他业务。其他业务，存在的业务逻辑失效，是来自场景、数据、时间的漂移。即，随着时间、事态的发展，运用场景、数据表现产生了分布上的改变。而风控，则来自于强烈的对抗。&lt;strong&gt;道高一尺，魔高一丈。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;传统意义上，为了应对风险，衍生出4种模式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;回避风险&lt;/li&gt;
&lt;li&gt;控制风险&lt;/li&gt;
&lt;li&gt;转移风险&lt;/li&gt;
&lt;li&gt;承受风险&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一般来说，企业主要精力，花在控制风险上。不是所有风险，都可以回避。在控制风险的同时，也可转移部分风险，最后准备承受风险。这部分，在之前的文章《浅谈互联网风控——从策略到技术》有详细介绍。&lt;/p&gt;

&lt;p&gt;策略上，分为前中后。前：打标签，标记风险用户、风险内容。中：拦截风险，对高危操作进行干预。后：回顾每个环节，堵住漏洞。同时辅以核心指标的监控，在所有措施失效时，留一手兜底措施。&lt;/p&gt;

&lt;p&gt;技术上，给用户准备丰富的画像，从自然人、设备、账号等角度，刻画用户。用以支持风险的识别，策略的实施。&lt;/p&gt;

&lt;p&gt;最后，别忘了它的对抗特性。这要求我们，持续不断的演进技术、策略和手段。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;游戏作弊，其实就是游戏内的风险。它不仅会影响游戏产品的体验，使产品走向，偏离策划的初衷。更会影响玩家间的平衡，进而影响产品的营收。更进一步的，让游戏失去吸引力，导致产品失败。&lt;/p&gt;

&lt;h2 id=&#34;游戏反作弊&#34;&gt;游戏反作弊&lt;/h2&gt;

&lt;h3 id=&#34;作弊的形式及手法&#34;&gt;作弊的形式及手法&lt;/h3&gt;

&lt;p&gt;谈到作弊的形式，不妨从一个玩家的角度出发。为了获得碾压感，满足感，玩家会从以下方面入手：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为了获得满足感，玩家会修改道具获取逻辑，不付费、或者修改货币值，获得道具和服饰。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;为了获得数值上的优势，调高伤害、减轻承伤。诸如“无敌”或者“锁血”，可属于这一类。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;而对于时间换物资的“肝”玩法，则通过修改产出逻辑、或改变游戏内的时间节奏获取。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;而在信息不对称玩法中，则通过读取数据，以此获得优势。例如：吃鸡游戏中的透视。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述的种种作弊，其核心在于数值，其次在于程序逻辑。因此，在客户端，玩家可通过注入代码、读取内存实现。在客户端与服务端通信过程中，还可伪造中间人，截取、修改数据。更甚至，反编译游戏包体，生成一个看似一样的安装包。修改内在逻辑，重新打包。&lt;/p&gt;

&lt;h3 id=&#34;游戏反作弊的业务逻辑&#34;&gt;游戏反作弊的业务逻辑&lt;/h3&gt;

&lt;p&gt;反作弊业务逻辑中，最重要的一环，是误判的处理。在作弊识别上，我们可以达到99.99%的准确率。但那万分之一，也是一个鲜活的玩家。如果误判了玩家，怎么办？除了提高准确率外，还应健全机制，预留申诉、回旋的空间。不至于，因为莫须有的判罚，让忠实玩家流失。&lt;/p&gt;

&lt;p&gt;在技术层面，游戏开发时，会有两个地方进行校验——客户端与服务端。客户端，通过基本的签名校验，保证不被篡改。服务端，则对发回的数据，再次校验，综合其它数据，进行判断。数据挖掘起的作用，则是发现、总结作弊模式。在进行业务处罚的同时，反馈到开发过程中。&lt;/p&gt;

&lt;p&gt;效果检查方面，游戏反作弊，又有其特殊性——不可证伪。不同于广告的点击，有明确的反馈。如果一个玩家，模型说他作弊，但他声称自己没作弊。那到底，是谁有问题？&lt;/p&gt;

&lt;p&gt;在其它业务，会用客户投诉率，作为服务质量的考核。但客诉率在这里，不是一个好指标。因为，对作弊的处罚，势必引起玩家的不瞒，投诉中真假参合。&lt;/p&gt;

&lt;p&gt;真正应当关心的，是核心指标的变化。比如，作弊让游戏内某项资源，产出大幅加倍，我们的效果指标，则应该是该资源的产出率。&lt;/p&gt;

&lt;p&gt;而对于实锤作弊玩家，作弊的处罚，也不仅仅局限于封禁。在强社交游戏中，封禁他的社交行为，也是一种惩罚——即能警示其它玩家，又不至于影响正常游戏行为。除此之外，对于对抗类游戏，play with cheater，也是可行的思路。&lt;/p&gt;

&lt;h3 id=&#34;最终目的与终极方案&#34;&gt;最终目的与终极方案&lt;/h3&gt;

&lt;p&gt;游戏反作弊，更像是电子世界里的警察——打击罪犯，惩恶扬善。反作弊系统，能发现并打击作弊，但想彻底根除，只有一条路：关闭服务器。所以，反作弊的终极目的，不应当是：根除所有作弊；而是，赢得玩家信任。用各种手段，减弱不平衡，保障正常玩家权益，&lt;strong&gt;建立玩家对系统的信心。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;前段时间，云游戏出现在大家视线。除了不受终端限制的便利外，媒体更是惊呼：“这是作弊者的末日！”。因为，客户端和服务端都不在玩家侧。但仔细想想，云游戏，真的是反作弊的终极方案吗？替考是作弊，AI 替打游戏呢？物理外挂，算不算作弊呢？&lt;/p&gt;

&lt;p&gt;所以说，反作弊就是个开放世界游戏，当你以为快通关时，又会有新的冒险，等着你出发。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我为何离开网易游戏——从个人商业模式角度，谈谈离开中国第二游戏公司的原因</title>
      <link>https://kuhungio.me/2020/why-i-left-netease-games/</link>
      <pubDate>Wed, 13 May 2020 00:41:54 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/why-i-left-netease-games/</guid>
      <description>

&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;

&lt;p&gt;网易游戏是我毕业后的第一家公司，说没有感情，那是不可能的。当然，这感情主要针对那里的同事和朋友。&lt;/p&gt;

&lt;p&gt;网易又叫猪场，猪场曾一度有最好吃的免费食堂，一度给名校毕业生开最高的工资。&lt;/p&gt;

&lt;p&gt;在数年前，大话西游2帮助公司起死回生。&lt;/p&gt;

&lt;p&gt;而后开发的梦幻西游，成了公司最强的现金流来源。&lt;/p&gt;

&lt;p&gt;2016年阴阳师爆款，几乎成了全民游戏。&lt;/p&gt;

&lt;p&gt;2018年，加入网易游戏，带着自豪感。因为它说：用心做游戏。&lt;/p&gt;

&lt;p&gt;2020年，离开网易游戏，矛盾夹杂着解脱。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;当知道我离开网易游戏时，许久没联系的朋友，都感到十分吃惊：这可是头部互联网公司，好多学校的人根本没资格进入；但熟悉我的朋友都知道，这件事已经“蓄谋已久”。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/left-netease/id-card.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这其实源于一些观念的冲突。&lt;/p&gt;

&lt;p&gt;我本人关于工作的信念是：个人以一定价钱出售其劳动产出。个体与组织的关系，是合作而不是卖身。&lt;/p&gt;

&lt;p&gt;正如《软技能》一书所言，改变打工心态，把自己当公司经营，现在的公司是个大客户，仅此而已。&lt;/p&gt;

&lt;p&gt;下面，从商业模式，特别是个人角度，来谈谈离开网易游戏的原因。个中原因，很多亲近的人，都未必知道。&lt;/p&gt;

&lt;h1 id=&#34;商业模式个人篇&#34;&gt;商业模式个人篇&lt;/h1&gt;

&lt;h2 id=&#34;核心资源&#34;&gt;核心资源&lt;/h2&gt;

&lt;p&gt;商业模式中，很重要的一点便是：核心资源。即我是谁，我拥有什么。这个问题颇有——我是谁，我从哪里来，我要到哪里去的意味。&lt;/p&gt;

&lt;p&gt;一般年轻人认为，我拥有用不完的精力，因而相较于更年长的员工，我的核心竞争力在于可以加班。&lt;/p&gt;

&lt;p&gt;这样的想法大错特错。年轻是试错的机会，而不是让人无故内卷。没错，这样的“一般年轻人”便是两年前的我。&lt;/p&gt;

&lt;p&gt;什么是核心资源呢？稀缺的是核心资源。人无我有、人有我精的，才是核心资源。&lt;/p&gt;

&lt;p&gt;从这个角度想下去，所具备的技术技能、行业积累，以及对新事物的热情，才是真正的核心资源。&lt;/p&gt;

&lt;h2 id=&#34;关键业务&#34;&gt;关键业务&lt;/h2&gt;

&lt;p&gt;关键业务，简单来说，就是每天所从事的事情。&lt;/p&gt;

&lt;p&gt;但这里，根据28定律，20%的工作，产生80%的绩效；所以这里的关键业务并非指剩下80%的工作。&lt;/p&gt;

&lt;p&gt;什么是80%的工作呢？在数据挖掘这个领域，80%的时间是在产出数据，保证数据的及时响应。&lt;/p&gt;

&lt;p&gt;每天的取数工作，这个岗位的从业者有了新的绰号——取数男孩（茶树菇）。&lt;/p&gt;

&lt;p&gt;剩下20%的工作，在提供数据的洞察。关于数据的过去与未来，溯因与预测，提供基于数据模型的决策方向，才是岗位的关键业务。&lt;/p&gt;

&lt;p&gt;而80%的非关键业务，应当想方法标准化、自动化，以提高效率。而不是每天用 excel 做各种变换，洋洋洒洒写一份无人执行的分析报告。&lt;/p&gt;

&lt;h2 id=&#34;客户群体&#34;&gt;客户群体&lt;/h2&gt;

&lt;p&gt;客户群体，是商业模式中的概念。正如一开始所言：公司，其实就是我们的大客户。&lt;/p&gt;

&lt;p&gt;公司内的直接上级、boss、或者其它部门的人，都可以是我们的客户群体。&lt;/p&gt;

&lt;p&gt;在这些客户群中，有人认为，向上管理是第一位的。即：做好上级和上上级的需求，服务好他们，才是升职加薪的正确之道。&lt;/p&gt;

&lt;p&gt;这点上，我只同意一半。哪一半，后一半。即服务好我们的客户，才能赢得信任，才能得到更高的回报。&lt;/p&gt;

&lt;p&gt;向上管理没问题，但向上管理很多时候成了唯上。我们的客户，是上级、是团队、更是整个公司。服务好每个部分，同等重要。&lt;/p&gt;

&lt;h2 id=&#34;价值服务&#34;&gt;价值服务&lt;/h2&gt;

&lt;p&gt;这个概念是商业模式中，最重要的，因为它决定了你的定价区间。&lt;/p&gt;

&lt;p&gt;简单来讲，我给客户提供的服务，帮助客户完成事情，其背后的价值，才是真正的价值服务。&lt;/p&gt;

&lt;p&gt;价值服务和关键业务容易混淆。关键业务是干的活，而价值服务则是干的活所产生的价值意义。&lt;/p&gt;

&lt;p&gt;同样的，有人认为，公司招聘我，就是买断了我的时间。而不去进行更深层次的思考。&lt;/p&gt;

&lt;p&gt;实际上，买断一天8小时的时间，只是表象。客户期望的是能产出有价值的东西。如果这样想，就会明白，时间不是关键，给公司带来的价值才是。&lt;/p&gt;

&lt;h2 id=&#34;渠道通路&#34;&gt;渠道通路&lt;/h2&gt;

&lt;p&gt;渠道通路，简单来讲就是，如何宣传自己、以及如何交付服务。让别人知道自己能做的事情，且能够交付服务。&lt;/p&gt;

&lt;p&gt;这里关键的问题在于，潜在客户如何知道你能帮助他们、是如何下定决心的、是如何购买的；以及如何交付及售后。&lt;/p&gt;

&lt;p&gt;酒香不怕巷子深，这是很多技术型同事的想法。会觉得有了自己的东西，才能更好让客户接纳自己。&lt;/p&gt;

&lt;p&gt;这个观点没错，是一种踏实务实的想法。但仔细想想，宣传服务和打造服务之间互斥吗，并不互斥。&lt;/p&gt;

&lt;p&gt;只有找准自己的价值服务，并进行宣传，才会有买家认账。不管这个买家是领导或是别的团队。只有卖出去了，才会有实际的回报。&lt;/p&gt;

&lt;h2 id=&#34;客户关系&#34;&gt;客户关系&lt;/h2&gt;

&lt;p&gt;客户关系讲的是如何和客户打交道。&lt;/p&gt;

&lt;p&gt;是直接沟通，还是远程服务。&lt;/p&gt;

&lt;p&gt;是一锤子买卖，还是长期性的维护。&lt;/p&gt;

&lt;p&gt;是拓展新客户，还是维系老客户。&lt;/p&gt;

&lt;p&gt;一般来说，公司招聘员工，希望的是能做持续性的项目。&lt;/p&gt;

&lt;p&gt;但某些考核标准下，如按项目分成模式，持续性项目就少有生存空间。&lt;/p&gt;

&lt;p&gt;自上而下，希望立足够多的项目，借此来分得一杯羹，因而出现了炒冷饭的情况。&lt;/p&gt;

&lt;p&gt;最后面向晋升编程，晋升过后无人维护、一地鸡毛。n年过后，该项目又被下一个人立项。&lt;/p&gt;

&lt;p&gt;项目失败不可怕，因为可以从失败中总结教训。可怕的是不断的立项，在公司内做一锤子买卖，造成无端的资源浪费。&lt;/p&gt;

&lt;h2 id=&#34;重要合作&#34;&gt;重要合作&lt;/h2&gt;

&lt;p&gt;合作一般基于交换，这里的合作，指的是谁可以帮我。&lt;/p&gt;

&lt;p&gt;他们可以是家人、同事、是导师、也可以是同一职业的其他人。他们提供帮助、建议和成长机会；提供必要的资源。&lt;/p&gt;

&lt;p&gt;作为互联网新生代，信息不像之前闭塞。虽然信息茧房确实存在，但互联网确实是重要的合作对象。&lt;/p&gt;

&lt;p&gt;而在公司中，提供资源和方向的一般是直接上级。&lt;/p&gt;

&lt;h2 id=&#34;收入来源&#34;&gt;收入来源&lt;/h2&gt;

&lt;p&gt;简单来讲，大伙儿的收入来源是工资；其次，少部分收入可能来自于股票、基金或者房屋出租。&lt;/p&gt;

&lt;p&gt;打工的主要收入来源便是工资。这里存在两个问题：&lt;/p&gt;

&lt;p&gt;一是，工资奖金上涨带来的愉悦，存在边际递减效应。即同样的涨幅，越到后面越没感觉。更别说大部分人薪水几乎无变化。&lt;/p&gt;

&lt;p&gt;其次，单一的收入来源伴随着风险。不管和领导关系多么密切，公司现金流多么充沛。小概率事件必然发生。&lt;/p&gt;

&lt;p&gt;破解这两个问题的方法在于：&lt;/p&gt;

&lt;p&gt;工资到了一定水平后，需要关注精神的满足。工作的成就感和社会贡献，就显得尤为重要。&lt;/p&gt;

&lt;p&gt;其次，发展多重收入。可以是被动收入，也可以是主动收入。&lt;/p&gt;

&lt;p&gt;多重收入的事，已经有鹅厂的兄弟在实践了。周末鬼屋兼职扮鬼，舒缓压力又带来额外的收入。&lt;/p&gt;

&lt;h2 id=&#34;成本结构&#34;&gt;成本结构&lt;/h2&gt;

&lt;p&gt;成本，这里指时间、精力和金钱成本。同时，合作过程中的压力和失落，也是成本。&lt;/p&gt;

&lt;p&gt;对于个体而言，长时间的劳动，所带来的精神和机会成本，也是不可忽视的。&lt;/p&gt;

&lt;p&gt;我在公司学会了流程意识，也学到了投入产出比意识。&lt;/p&gt;

&lt;p&gt;当成本和收益长期不对等的时候，也就是离开的时候了。&lt;/p&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;上面，我们从商业模式的角度，提炼了这次选择离开的原因。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/left-netease/model.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;当然，部分原因进行了抽象，也结合了外部的所见所闻，并不代表公司的所有部门。&lt;/p&gt;

&lt;p&gt;目前，原团队还有很多优秀的同事、以及即将入职的优秀同事，大家都有光明的前途。&lt;/p&gt;

&lt;p&gt;在接下来的日子里，我也将继续思考与实践。不仅要用商业模式解释为什么不，也要用它来思考：我能做些什么。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;喜欢本文的同学，何不加个关注和收藏。毕竟在信息流的分发下，还能再遇见的几率就很小啦。&lt;/p&gt;

&lt;p&gt;同时，也期待后续的商业化作品能够成型，与各位见面。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>数据分析思维导图</title>
      <link>https://kuhungio.me/2020/data_analytics_mindmap/</link>
      <pubDate>Wed, 06 May 2020 22:18:50 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/data_analytics_mindmap/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/mindmap/data_analytics.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;思维导图获取&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap/blob/master/xmind/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A.xmind&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;.xmind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap/blob/master/pdf/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A.pdf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap/blob/master/image/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>结构化知识整理——以15张思维导图为例</title>
      <link>https://kuhungio.me/2020/mindmap_2020/</link>
      <pubDate>Sat, 25 Apr 2020 17:22:57 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/mindmap_2020/</guid>
      <description>

&lt;p&gt;思维导图，是结构化思维的具体表现形式。最鲜明的例子，就是当你和一个人聊天时，可以很明确的感觉到，拥有结构化思维的人，他的语言组织能力很强，且很有层次感。简单来说，就是和他沟通，简单高效、有收获，有层次感。&lt;/p&gt;

&lt;p&gt;在过去几年里，也整理了一些场景的思维导图。大约是从15年，上大学的第二年，第一次接触到这个东西。不过略微遗憾的是，早期是一些手绘的内容，没能保存在身边。以下是电子化的内容，分享给到大家。&lt;/p&gt;

&lt;p&gt;这里，不仅有思维导图 png 格式，同时也有其 xmind 源文件。授人以鱼不如授人以渔嘛，可以参照之前的文件进行修改（xmind 公司，看到后请给我打钱）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;免费获取思维导图&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;沟通与整理&#34;&gt;沟通与整理&lt;/h2&gt;

&lt;h3 id=&#34;沟通的艺术&#34;&gt;沟通的艺术&lt;/h3&gt;

&lt;p&gt;要说人类在哪一点优于其它物种，当属语言沟通。但沟通也不是与生俱来的本能，不然就不会有这么多的冲突了。沟通是一门艺术。&lt;/p&gt;

&lt;p&gt;沟通的艺术，是一本15年在图书馆看的书。这里就不得不夸奖一下华科的图书馆，人文社科和财经类的很齐全，F开头的书基本都能找到。&lt;/p&gt;

&lt;p&gt;沟通的艺术从理论层面，给出了沟通的原理，同时也指出了很多解决办法。类似的《非暴力沟通》也是一本不错的书。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/沟通的艺术.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;超整理术&#34;&gt;超整理术&lt;/h3&gt;

&lt;p&gt;超整理术也是一本在图书馆看的书，书的设计感很强，贴合了他的标题。&lt;/p&gt;

&lt;p&gt;整理对象分为了三个部分：包括物理空间的整理，交流思绪的整理以及信息的整理。&lt;/p&gt;

&lt;p&gt;整理的过程，也是思维重建的过程，这和思维导图的建立相得益彰。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/超整理术.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;思维与学习&#34;&gt;思维与学习&lt;/h2&gt;

&lt;h3 id=&#34;批判性思维指南&#34;&gt;批判性思维指南&lt;/h3&gt;

&lt;p&gt;了解这个领域的动机是，大学参加的数场讲座。在讲座过程中，都会有提问环节。&lt;/p&gt;

&lt;p&gt;但是这个环节，明显可以感觉出不同的人有不同的思维敏锐度。有的人提问水平非常高，有的就是复读机，问的问题不痛不痒。&lt;/p&gt;

&lt;p&gt;学会提问，个人认为是现代人比较稀缺的技能，特别是高等教育的大学校园。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/批判性思维.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;金字塔原理&#34;&gt;金字塔原理&lt;/h3&gt;

&lt;p&gt;麦肯锡都在用的金字塔原理。简单来说，就是独立穷举（MECE）的分组、层次化的表达。&lt;/p&gt;

&lt;p&gt;其实实不相瞒，咱们高中的议论文写作也是这个套路。&lt;/p&gt;

&lt;p&gt;在工作中，这也是一项极大的加成。利用金字塔原理，让你的观点更容易推销出去。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/金字塔原理.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;学习之道&#34;&gt;学习之道&lt;/h3&gt;

&lt;p&gt;学习之道（the way to learn）是 Coursera 上的著名课程，广受喜爱。如果能更早看到，也许北大清华就不是梦了。&lt;/p&gt;

&lt;p&gt;学习的方式因人而异，但其背后的原理却差不多。对知识点重构组块，反复练习，是学习绕不过的弯子。&lt;/p&gt;

&lt;p&gt;经过思维导图整理后，学习之道被应用到了学习之道的理解上面（无限套娃）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/学习之道.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;写作与演说&#34;&gt;写作与演说&lt;/h2&gt;

&lt;h3 id=&#34;演说之禅&#34;&gt;演说之禅&lt;/h3&gt;

&lt;p&gt;演说之禅，略微带些哲学意味。别看展开了这么多，实际是为了方便理解。&lt;/p&gt;

&lt;p&gt;演讲是每个人在人生阶段都必经的道路，无论是做面试推销、还是追求异性，都是某种形式的演说。&lt;/p&gt;

&lt;p&gt;千言万语归为一句，演讲要关心的是：想推销的核心观念是什么，如果只能用一句描述，该会是什么？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/演说之禅.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;文案写作&#34;&gt;文案写作&lt;/h3&gt;

&lt;p&gt;写文章，最头疼的还不是素材，不是写什么的问题，而是怎么写。&lt;/p&gt;

&lt;p&gt;素材随处可见，再不济跟热点也行。但不是每个人都能写出好的文案。&lt;/p&gt;

&lt;p&gt;写文案也是有套路可言的。例如：以情感卖出产品，以理性阐述购买。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/文案写作.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;时评写作十讲&#34;&gt;时评写作十讲&lt;/h3&gt;

&lt;p&gt;时评写作是被新闻学院的一个朋友带入门的，曾经的我也是个网络喷子兼键盘侠——“意见不合就是干”。&lt;/p&gt;

&lt;p&gt;和他交锋几次后，发现自己简直就是菜鸡。于是他顺势给我推荐了这本书。&lt;/p&gt;

&lt;p&gt;在大环境作用下，加上推荐引擎的加持，你所见的，未必是真实全面的。所以，下次就时事开喷前，不妨看看《时评写作十讲》。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/时评写作十讲.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;技术体系&#34;&gt;技术体系&lt;/h2&gt;

&lt;h3 id=&#34;机器学习&#34;&gt;机器学习&lt;/h3&gt;

&lt;p&gt;如果问最近5年什么概念最火，机器学习肯定得有一个席位。本人也在15-16年左右，借猫狗分类比赛进入该领域。&lt;/p&gt;

&lt;p&gt;随着这一行的火爆，进入的人越来越多，竞争加剧的同时，越来越多的项目也得到落地。&lt;/p&gt;

&lt;p&gt;落地越多，成体系的方法经验也得到了总结。机器学习系统设计，梳理了机器学习项目的整个生命周期。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/机器学习系统设计.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;计算广告&#34;&gt;计算广告&lt;/h3&gt;

&lt;p&gt;谷歌是一个科技公司，但反垄断调查时，它会说自己是家广告公司，以此来逃避反垄断调查。&lt;/p&gt;

&lt;p&gt;它能得逞的原因在于，广告占据了谷歌的大部分收入。而广告商又确实不止谷歌一家独大。&lt;/p&gt;

&lt;p&gt;计算广告和推荐系统一样，可以说是机器学习的主要应用，对其有一个整体的了解还是很有必要。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/计算广告.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;测试驱动&#34;&gt;测试驱动&lt;/h3&gt;

&lt;p&gt;TTD 测试驱动，之前被用在软件开发领域。&lt;/p&gt;

&lt;p&gt;随着机器学习的工程化推进，测试驱动机器学习也值得关注。&lt;/p&gt;

&lt;p&gt;简单来说，测试驱动就类似于：“先出考纲再教学”，让软件开发更有效率。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/测试驱动的机器学习.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;互联网风控&#34;&gt;互联网风控&lt;/h3&gt;

&lt;p&gt;人类从诞生之初，就一直面临着各式各样的风险。而上世纪80年代兴起的互联网，当下也面临各式各样的风险。&lt;/p&gt;

&lt;p&gt;羊毛党、黑产肆虐，一不小心可能老本都被薅没。同时在PUGC平台，用户上传的内容也有各种风险。&lt;/p&gt;

&lt;p&gt;但好在，其它领域的风控经验，对于互联网同样有借鉴意义。通过多种策略手段，能在一定程度上控制风险。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/互联网风控.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;其它&#34;&gt;其它&lt;/h2&gt;

&lt;h3 id=&#34;敏捷&#34;&gt;敏捷&lt;/h3&gt;

&lt;p&gt;敏捷（Scrum），简单的来说就是赶紧上，先跑通流程，再去迭代。&lt;/p&gt;

&lt;p&gt;敏捷的理念是对过去瀑布式开发的挑战，用更多的迭代去应对市场的变化。&lt;/p&gt;

&lt;p&gt;但现实却是，敏捷在一定程度上成了”拍脑袋”的挡箭牌。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/敏捷.png&#34; alt=&#34;敏捷 Scrum&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;远程工作&#34;&gt;远程工作&lt;/h3&gt;

&lt;p&gt;Freelancer 最近接触比较多的一个名词，意为自由职业工作者。与之类似的，则是远程工作者。&lt;/p&gt;

&lt;p&gt;随着全球化进程（虽然现在有逆全球化趋势），远程工作可以带来更多的优秀人才以及更低的人力成本，越来越多公司接纳了这一理念。&lt;/p&gt;

&lt;p&gt;远程工作有很多反对的声音，但也不妨碍其一步步进入我们的生活。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/remote.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;保险&#34;&gt;保险&lt;/h3&gt;

&lt;p&gt;19年底，新闻上又一位互联网从业人员猝死，撕破行业的高科技伪装。说到底，不过是人力密集型工作。&lt;/p&gt;

&lt;p&gt;在赚钱的同时，也要保护好自己的身心健康。人的职业生涯很长，至少3个15年，在第一个15年燃尽自己其实是短视的。&lt;/p&gt;

&lt;p&gt;不同的人可能有不同的苦衷，再不济，也要给自己兜个底。为了在了解保险时不被动，总结了下面的思维导图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kuhung/mindmap/raw/master/image/保险基础指南.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;如果要说思维导图带来的益处，最大的好处就是过了许久，仍能回忆起当时的知识点。&lt;/p&gt;

&lt;p&gt;在思维导图化的众多知识体系中，令我印象最为深刻的是在华科的时候，新闻与传播学院的公选课《新媒体营销》。和其它人文社科类课程一样，它弥补了工科生的我在人文上的短板，让我看问题更加多角度和多元化。&lt;/p&gt;

&lt;p&gt;最大的影响，是目前在做的事，通过各种媒介，去传递一些好的理念，同时达到推销自己的作用。让我的受众接受到更高信噪比的信息，同时自己的思维表达也得到锻炼，这是我一直坚持下去的动力。&lt;/p&gt;

&lt;p&gt;如果喜欢上面的内容，何不点个收藏和关注，毕竟在繁杂的信息推荐流中，下次遇见的机会就会很小了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;免费获取思维导图&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>自制以图搜图引擎，居家学习必备</title>
      <link>https://kuhungio.me/2020/simple-image-search/</link>
      <pubDate>Mon, 13 Apr 2020 21:17:08 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/simple-image-search/</guid>
      <description>&lt;p&gt;最近宅在家，消遣时间之际，总会遇到一个让我困扰的事情。比如随手刷到的一个GIF，总想找到它的原片。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/dog.jpg&#34; alt=&#34;狗头&#34; /&gt;&lt;/p&gt;

&lt;p&gt;各位绅士可别想歪，我说的是动漫。&lt;/p&gt;

&lt;p&gt;这个问题本质是一个相似度的检索问题。&lt;/p&gt;

&lt;p&gt;说到视频找视频，其实可以分解为以图搜图。以图搜图这项技术，已经十分成熟，且已产品化。尤其在主流搜索引擎，很难找到一个不能搜图的引擎。连淘宝都有自己的时尚搜图功能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/google-img-search.jpg&#34; alt=&#34;谷歌搜图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;但是当你满怀期待上传一张图时，你会发现，他返回的结果要么是同风格作品，要么是图片的描述。摔，我不是让你做抽象阅读理解哇。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/google-img-search-result.jpg&#34; alt=&#34;谷歌搜图效果&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这样的现象，实际是个性化需求与规模化需求的矛盾。对于公司，能规模化的，成本越低；定制带来存储成本，远高于能带来的回报。&lt;/p&gt;

&lt;p&gt;这样的问题难不倒我们广大的人民群众，如果没有现成的，那我们就造一个。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;以图搜图，可以理解为图像的检索，图像和其它信息一样，是可以被索引，被检索的。&lt;/p&gt;

&lt;p&gt;于是乎，可以将整个工程抽象为3个部分。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;图像预处理&lt;/li&gt;
&lt;li&gt;图像特征表征&lt;/li&gt;
&lt;li&gt;图像检索&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/pipeline.jpg&#34; alt=&#34;图像检索&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图像预处理，一般是尺寸、色调的调整、以及去除明显的噪声。&lt;/p&gt;

&lt;p&gt;索引建立有很多种方法，其核心是构造图像的特征表征。&lt;/p&gt;

&lt;p&gt;这里先用简单的，构建一个 MVP（最小可行性产品），就采用谷歌的 MobileNet 啦。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/mobileNet2.png&#34; alt=&#34;mobileNet2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;该模型尺寸仅数十M，放在服务器或是部署到手机移动端，完全绰绰有余。（实不相瞒，其实一开始上的VGG16，但是模型太大了，服务器放不下。）&lt;/p&gt;

&lt;p&gt;最后，图像检索，当一张新图来到时，对其进行特征提取，然后去索引库中查询，返回特征表征最近的 TopN，一个简单的以图搜图就完成了。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;迫不及待想尝试了，但是发现一个大问题，咱们的索引图从哪儿来？总不能凭空捏造噻。&lt;/p&gt;

&lt;p&gt;嗯，这也不是什么大问题，之前浏览某P开头，哦不对是G开头的学习网站，发现了知乎问题的爬虫。&lt;/p&gt;

&lt;p&gt;这可是个好东西，恰好知乎时间线上，总有一个问题干扰学习——#什么样的腿才叫好看的腿#&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/img-set.jpg&#34; alt=&#34;img-set&#34; /&gt;&lt;/p&gt;

&lt;p&gt;就拿这个问题为例，将图片在离线创建索引，随后通过服务端部署。（服务端部署也可以讲一集，但不在这里，别挡住我看腿。）&lt;/p&gt;

&lt;p&gt;当当当，随着周末两天的操作，舍弃了俺在的 pubg mobile 战友，谷粒粒的第一个搜图app上线咯。喜大普奔。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/niubi.jpg&#34; alt=&#34;叉腰&#34; /&gt;&lt;/p&gt;

&lt;p&gt;让我们赶紧试试，&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/img-search-1.jpg&#34; alt=&#34;效果一&#34; /&gt;&lt;/p&gt;

&lt;p&gt;嗯，还不错&lt;/p&gt;

&lt;p&gt;再来一张，&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/img-search-2.jpg&#34; alt=&#34;效果二&#34; /&gt;&lt;/p&gt;

&lt;p&gt;原图秒匹配好吗，还给配上了类似风格的照片。&lt;/p&gt;

&lt;p&gt;到这里，咱们的以图搜图小应用，就算开发上线完毕啦。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/img-search/img-search-3.jpg&#34; alt=&#34;效果三&#34; /&gt;&lt;/p&gt;

&lt;p&gt;学习效率上升N个档次有没有⬆&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;链接地址：以图搜图之#什么样的腿才叫好看的腿#&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;http://img-search.kuhungio.cn/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://img-search.kuhungio.cn/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;相关文章：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzAwODQ4MDAzMw==&amp;amp;mid=2651274954&amp;amp;idx=1&amp;amp;sn=96c1aa81c59ccbb1b3af86256506b029&amp;amp;chksm=809daa84b7ea23925bc04cd1921f45e89db12335284df8c936c4896b82f908d214c3a172f527&amp;amp;scene=21#wechat_redirect&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;谷粒：机器学习模型部署&amp;ndash;打通前后端任督二脉&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzAwODQ4MDAzMw==&amp;amp;mid=2651274907&amp;amp;idx=1&amp;amp;sn=45af5f11f9ceb2fa4d31a0752348a735&amp;amp;chksm=809daad5b7ea23c3bfc377d4429d74e9f5adde79cfecf31c9b3ee218ce3902c270078d1fd74b&amp;amp;scene=21#wechat_redirect&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;谷粒：机器学习落地需攻破的9个难题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;声明：该应用仅供学习，禁止用于其它用途。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>计算广告思维导图</title>
      <link>https://kuhungio.me/2020/computational-advertising/</link>
      <pubDate>Sun, 05 Apr 2020 17:42:17 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/computational-advertising/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/comp_adv/comp_adv.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;思维导图获取&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap/blob/master/xmind/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A.xmind&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;.xmind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap/blob/master/pdf/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A.pdf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuhung/mindmap/blob/master/image/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>互联网风控思维导图</title>
      <link>https://kuhungio.me/2020/risk_management_mind_map/</link>
      <pubDate>Wed, 25 Mar 2020 00:12:28 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/risk_management_mind_map/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/risk_management/risk.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>浅谈互联网风控--从策略到技术</title>
      <link>https://kuhungio.me/2020/risk_management/</link>
      <pubDate>Sun, 22 Mar 2020 14:34:33 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/risk_management/</guid>
      <description>

&lt;p&gt;风控，全称风险控制，英文名 risk management。风控的研究起于二战结束后，主要集中在个人或企业的商业保险领域，用于减少突发事物带来的损失。金融行业的核心，乃是风险控制。&lt;/p&gt;

&lt;p&gt;但今天，我们这里不谈金融的风控。金融风控已经演化了多年，众多顶尖学者已对其进行了研究，各种模型层出不穷，自有人去分析。我们这里说一说，互联网的风控。&lt;/p&gt;

&lt;h1 id=&#34;风控的核心&#34;&gt;风控的核心&lt;/h1&gt;

&lt;p&gt;如果你在网上检索，一定会发现很多人，谈到风控，必加智能，似乎不智能就不风控了一般。有人说，风控的核心是智能；也有人说，风控的核心是数据。这些老生常谈，将数据智能看成了银弹，看成了哆啦A梦的百宝袋，能解决一切问题，但其实这种说法忽略了现实。&lt;/p&gt;

&lt;p&gt;那现实是什么呢？如果你问，风控的核心是什么。很多人可能回答不上。但你问，为什么你要买保险，很多人的回答会是，不怕一万、就怕万一，保险能够兜底未来可能的大额支出。用小额保费对冲小概率但大支出的以外，换而言之，就是一场成本核算。&lt;/p&gt;

&lt;h2 id=&#34;成本控制的两个方面&#34;&gt;成本控制的两个方面&lt;/h2&gt;

&lt;p&gt;风控对于成本的控制，在互联网主要体现在两个方面。一个是资金成本。搞活动，不能被薅羊毛的搞破产了。或者搞个特牛的模型，能识别所有的风险，有且只有一个缺点，要用上全球一半的计算机（费钱）。另一方面，是体验成本。互联网风控，免不了嵌入业务，但如果过于突兀，很可能影响用户体验。这方面的典型，极端就是恶搞的12306验证码识别。&lt;/p&gt;

&lt;h1 id=&#34;风控与信息安全的异同&#34;&gt;风控与信息安全的异同&lt;/h1&gt;

&lt;p&gt;风控这个业务，和信息安全中的加密很像。当破译的难度大于潜在的收益时，加密方式其实就安全了。没有不计成本的密码破译，也没有不计成本的风险控制。风控要做的，也是某种程度的平衡。&lt;/p&gt;

&lt;p&gt;但同时，风控和信息安全也有不同之处。&lt;/p&gt;

&lt;p&gt;在互联网业务中，风控的对象一般会有两种形式存在。一类是静态的账号，比如恶意的初始号，或者是盗用、冒用的他人账号。另一类，是其动态的活动。具体表现为账号主题生产的内容，或是其参与的活动。而信息安全，主要是软硬件的漏洞，再加上社会工程中人性的漏洞。&lt;/p&gt;

&lt;h1 id=&#34;风控的挑战与应对&#34;&gt;风控的挑战与应对&lt;/h1&gt;

&lt;p&gt;最明显的挑战在于，敌在明我在暗，同时由于对抗手段的加码，对方会找到规避的手段，或是找到风控的系统漏洞。&lt;/p&gt;

&lt;h2 id=&#34;风控策略与技术&#34;&gt;风控策略与技术&lt;/h2&gt;

&lt;p&gt;在传统风控中，应对风险有4种基本思路。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;回避风险。即如果我知道你有风险，我就回避掉你。这会带来一定的损失，俗话说，风险伴随着收益，回避风险，在互联网业务中，有些能回避，有些则不能。对于政策风险，法律风险，该回避的则回避。对于不能回避的风险，我们采取下面的措施。&lt;/li&gt;
&lt;li&gt;控制风险。这是互联网风控的主要内容。如果控制风险，从风险的酝酿、到风险的暴露，再到风险的控制，每一个环节都有可为。&lt;/li&gt;
&lt;li&gt;转移风险。这个措施更靠近业务。通过将风险转嫁，或是共摊，来实现风险的控制。举个例子：平台将风险分散到平台与商家之间，或是将风险在声明中转移到UGC内容的用户上。&lt;/li&gt;
&lt;li&gt;风险承受。最后这个措施，是风险的兜底措施。即承担风险带来的损失。这一般要求有资金的预留或是退路的预留。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;策略&#34;&gt;策略&lt;/h3&gt;

&lt;p&gt;互联网的风控策略，可分为两部分。一部分是业务侧，通过一系列手段，去削弱风险。另一方面，则是宏观侧，通过数据监控整体的业务情况，进行风险的宏观判断。&lt;/p&gt;

&lt;p&gt;在嵌入业务的一侧，可按风险行为分为前、中、后三个阶段进行。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;风险发生前：通过技术手段或用户引导，完善用户资料。同时对用户的基本信息进行分析，将明显特征的账号进行标记。该部分，成本和复杂度都较低，适合作为风控策略的主要部分。同时，可通过关联分析，将问题范围缩小，从账号、自然人、到工作室，集中处理。&lt;/li&gt;
&lt;li&gt;风险进行中：这部分一般和用户的行为有关，也常常嵌入业务中。常见的如 UGC 的违规内容，色情、暴恐信息等。这部分，像豆瓣，在检测到关键词后，会进行先审在放行。另一个例子则是，12306的验证码，通过人机验证，规避机器人。&lt;/li&gt;
&lt;li&gt;风险已发生：尽管手段丰富，但仍有“漏网之鱼”。一旦风险成为既定事实，则需要采取措施应对。一方面，是做好风险的应对，另一方面，则是及时复盘，对现有体系进行审视，避免机制上再出问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后的，无论无论风控做得多好，总会有黑天鹅发生。做好应急预案，有兜底的策略，都十分重要。小概率事件必然发生。风险的发生是常态，无风险其实才是少有的异常状态。要做的就是，在风险发生后，减少风险造成的损失，让系统及时重上线。&lt;/p&gt;

&lt;h3 id=&#34;技术&#34;&gt;技术&lt;/h3&gt;

&lt;p&gt;策略看起来很简单，但实际操作起来，困难重重。很重要的一个原因是，信息不对等。举个例子，知道该对问题账号处理，但是不知道哪些是问题账号。这里就需要技术来消除信息不对等。&lt;/p&gt;

&lt;p&gt;这里就要请出用户画像。一般的，用户画像被用来理解用户，做更好（更上瘾）的视频推荐，做更精准的广告投放。而在风控领域，用户画像的作用，同样显著。&lt;/p&gt;

&lt;p&gt;用户画像背后的技术，除了实打实的工程技术外，产品引导也十分重要。对于冷启动策略，通过引导，完善用户信息。更一般的，则是通过标签规则，通过一系列 if else 判断，生成用户标签。同时，对于社交产品，还会有好友关系链，通过社交图网络的挖掘，也可得到有用的信息。&lt;/p&gt;

&lt;p&gt;在风险进行中，采用嵌入业务的干预手段，需要实时流计算，这方面有很多好的开源软件，或者是采用像 Prometheus 一类的开源监控软件。如果资源允许，还可做一些时序上的预测。对未来一段时间的数据，给出预测的上下区间，一旦超过，即调起报警。&lt;/p&gt;

&lt;p&gt;在风险发生后，对样本的复盘，实际是异常检测。异常检测一般分为两类，孤立状态的点或块异常，或者是上下文相关的时序异常。其核心，是不平衡样本下的分类。这里的检测可以是对用户行为数据的检测，也可以是用户产出内容的检测，如图片检测、文本检测，这方面的技术已经很成熟，数据量足够，质量够高，即可保证高的准确率和召回率。&lt;/p&gt;

&lt;p&gt;最后，在泛化能力外，技术还应注意其可解释性，以及可更新的能力。即模型越简单越好，如奥卡姆剃刀所言：“如无必要，勿增实体”。同时，减少数据中的噪声。在上模型或规则前，探索数据、剔除常变量、剔除离群点，通过xgboost等获得特征有效性、对关键有效特征进行筛选。&lt;/p&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;互联网风控，是风控的一处延申。除风控的基本特点外，也带有其自身的特点。策略上，需要嵌入整个业务流程，同时准备兜底策略。技术上，有数据挖掘的手段，增加风控的效力。&lt;/p&gt;

&lt;p&gt;以上总结来自于工作实践和阅读思考，难免受自身局限，如有疏漏，还请读者批判指正。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/2020/risk_management_mind_map/&#34;&gt;互联网风控思维导图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;QCon 阿里毫秒级实时风控引擎&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Risk Management: History, Definition, and Critique &amp;ndash; Georges Dionne&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;风控算法大赛解决方案&amp;ndash;不得仰视本王&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>更高效的远程工作之道--REMOTE 手册精要</title>
      <link>https://kuhungio.me/2020/remote/</link>
      <pubDate>Sat, 07 Mar 2020 17:43:44 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/remote/</guid>
      <description>

&lt;h1 id=&#34;大规模远程工作实践&#34;&gt;大规模远程工作实践&lt;/h1&gt;

&lt;p&gt;远程工作，一个之前都没怎么考虑的事情，在2020年的春节过后，中国大陆进行了一次大规模实验。WFH（work from home），一个在外企很常见的操作，在国内却鲜有生存环境。&lt;/p&gt;

&lt;p&gt;虽然朋友圈已经有人发帖，渴望在办公室中办公，但是，也不能因此，就放弃思考远程工作的这么个事物。一成不变往往很简单，但变化之中，才有契机。&lt;/p&gt;

&lt;h1 id=&#34;远程工作契机&#34;&gt;远程工作契机&lt;/h1&gt;

&lt;p&gt;什么阻挡了远程工作的推行，我们无从说起。但何不把这次当作一种契机，去学习其中的脉络。&lt;/p&gt;

&lt;p&gt;关于远程工作，找到了一本小册子《Remote》，专门介绍远程工作的。作者也写过另一本书《Rework》，中文名重来 。写书虽说门槛不高，但是写出有说服力的书，具备条件的人往往很少。作者以其自己的公司 Basecamp 为例，说明了远程工作的优点，也向我们介绍了远程工作的注意事项。读懂它，你的远程工作事半功倍。&lt;/p&gt;

&lt;h1 id=&#34;远程工作迷思&#34;&gt;远程工作迷思&lt;/h1&gt;

&lt;p&gt;在书中，你可能看到自己的影子，也可以看到老板的影子。无论你是老板，还是打工者，其中的内容都值得细细理解。&lt;/p&gt;

&lt;h2 id=&#34;拒绝远程工作的理由&#34;&gt;拒绝远程工作的理由&lt;/h2&gt;

&lt;h3 id=&#34;只有在办公室-办公时间才是有限的&#34;&gt;只有在办公室，办公时间才是有限的&lt;/h3&gt;

&lt;p&gt;远程工作，不是一个新鲜事物。至少在作者这个书出版之时，到2020年，已经过去了7年。远程工作改变了集中式办公的缺点，时间被切割，无穷无尽的会议。但其自身也有适用范围，比如写作、编程、设计和客户支持等工作。像制造业，可能就不太现实。很多人对远程工作嗤之以鼻，常抱着努力干活，等我退休了，再来享受生活的态度。老板们顾及远程工作，很可能是担心没了约束，员工的拖延症很可能无限放大，毕竟谁都有拖延的时候。做好工作，而不是死守工作时间。&lt;/p&gt;

&lt;h3 id=&#34;如果我能看见他-我才能控制他&#34;&gt;如果我能看见他，我才能控制他&lt;/h3&gt;

&lt;p&gt;远程工作，在2020春节之前，一定是有很多反对声音的。比如，缺乏讨论的氛围，公司没有源源不断的点子，这怎么行。没准下一个点子就能颠覆乔布斯。但实际上，我们知道，很多人还在执行几个月甚至几年前的一个点子。有员工认为，家里的干扰太多，琐事不断打扰。但实际上一份有成就感的工作，不会让你轻易被打断。而管理者，会觉得，没有盯着他们，怎么知道他们是在干活，还是躺在床上玩手机。但实际上，就在眼皮子底下，员工也有无数种方法摸鱼。如果不信任他，一开始就不该雇佣他。&lt;/p&gt;

&lt;h3 id=&#34;别的公司都没这样做-我为什么要做&#34;&gt;别的公司都没这样做，我为什么要做&lt;/h3&gt;

&lt;p&gt;在团队内部，一个组这样做了，另一个组会嫉妒。但跳出这个逻辑，整个组织目标一致，效率最高才是最终的赢家。再一个，业务部门或者上级会觉得，我现在就要答案，现场能有更高的压迫感。但实际上，并不是所有事情同等重要。再一个，中小型企业会认为，BAT 大公司都没远程工作，肯定有他的不好，马某人都是聪明人，不可能没调研过。但实际上，你跟着大公司的脚步，永远成不了第二个马某人。远程工作能不受地域限制，网罗到世界各地的人才；有些时候，性价比更高。&lt;/p&gt;

&lt;h2 id=&#34;远程工作精要&#34;&gt;远程工作精要&lt;/h2&gt;

&lt;p&gt;远程工作，在2020春节之后，大伙儿已经有了足够多体会。作者的公司长期远程且稳定盈利，他总结了以下内容。&lt;/p&gt;

&lt;h3 id=&#34;及时同步进度&#34;&gt;及时同步进度&lt;/h3&gt;

&lt;p&gt;重要资料公开，而不是让人到处询问，让被询问人工作量加倍。展现工作进度，以成果导向。及时向团队内部公开。承诺往往有更高的约束力，而且，同行肯定比非技术领导更懂所需的工作时长。于此同时，做防灾的准备，诸如数据备份等工作。如果工作需要同客户合作，还需注意，及时将进度同步给客户。&lt;/p&gt;

&lt;h3 id=&#34;打造良好团队氛围&#34;&gt;打造良好团队氛围&lt;/h3&gt;

&lt;p&gt;对于团队内部，保持正向的氛围，阻止消极负面的情绪在团队内部蔓延。聪明且及完成任务，才是合适的好员工。用当地最好的薪水留住他们，而不是因地施策。关心员工的身心健康，担心过度劳累，而不是懒惰，因为可持续才能走更远。最后，保持一个强劲的动力，鼓励员工从事自己喜欢的事物。&lt;/p&gt;

&lt;h3 id=&#34;员工如何出众&#34;&gt;员工如何出众&lt;/h3&gt;

&lt;p&gt;而对于员工，如果你想在团队内出众，往往有两种方法。一个是在保持活跃，另一个就是高质量的交付任务。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>人声提取两大步骤：分离音频背景声&#43;过滤空白</title>
      <link>https://kuhungio.me/2020/audio_progress/</link>
      <pubDate>Sun, 12 Jan 2020 23:52:45 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/audio_progress/</guid>
      <description>

&lt;h1 id=&#34;背景需求&#34;&gt;背景需求&lt;/h1&gt;

&lt;p&gt;在处理音频中，我们可能会有这样的场景：随着语音设备的能力越来越强，音频数据越来越大。但实际上，音频中的有效部分却很少，抑或是音频的背景声过大，非目标声音。在这样的场景下，我们希望得到人声，去掉噪声，提高信噪比。&lt;/p&gt;

&lt;h1 id=&#34;问题界定&#34;&gt;问题界定&lt;/h1&gt;

&lt;p&gt;这里将问题进行界定，进行子任务拆分：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将音频的背景声音去除，&lt;/li&gt;
&lt;li&gt;去除“无声”阶段。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;

&lt;p&gt;要提高信噪比，这需求在很多场景中有见：比如课堂录音的提取，或者是录音笔的数据存储。&lt;/p&gt;

&lt;p&gt;在使用本领域“高深”的技术前，一定要思考，&lt;strong&gt;切莫手上有锤子，就看啥都像钉子&lt;/strong&gt;。想想该领域的专家会怎么做，如何从专业角度看待该问题；其次想想普通人会怎么做，防止落入经验主义陷阱。&lt;/p&gt;

&lt;p&gt;背景声音的剥离，最简单的其实是音轨分离。其前提是两种声音存为了不同的音轨，在一些场景很合适。比如电话录音。&lt;/p&gt;

&lt;h2 id=&#34;背景声分离&#34;&gt;背景声分离&lt;/h2&gt;

&lt;p&gt;但是若只有一个音轨呢？别担心，机器学习来帮助你。&lt;a href=&#34;https://github.com/deezer/spleeter&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;spleeter&lt;/a&gt; 基于 tensorflow，训练了一套音乐检索系统，能够有效的分离人声和背景音乐声。&lt;/p&gt;

&lt;p&gt;该工具已经进行封装，对于简单的人声分离，采用直接调取的方式即可。代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Use audio loader explicitly for loading audio waveform :
from spleeter.audio.adapter import get_default_audio_adapter

audio_loader = get_default_audio_adapter()
sample_rate = 44100
waveform, _ = audio_loader.load(&#39;/path/to/audio/file&#39;, sample_rate=sample_rate)

# Perform the separation :
prediction = separator.separate(waveform)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;空白切割&#34;&gt;空白切割&lt;/h2&gt;

&lt;p&gt;在分离之后，得到人声和背景声。人声分离后，仔细听，就会发现里面有很多空白。对于空白部分，进行切割分离。&lt;/p&gt;

&lt;p&gt;这里参考 &lt;a href=&#34;https://stackoverflow.com/questions/23730796/using-pydub-to-chop-up-a-long-audio-file&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stackoverflow&lt;/a&gt; 的代码&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pydub import AudioSegment
from pydub.utils import db_to_float

# Let&#39;s load up the audio we need...
podcast = AudioSegment.from_mp3(&amp;quot;podcast.mp3&amp;quot;)
intro = AudioSegment.from_wav(&amp;quot;intro.wav&amp;quot;)
outro = AudioSegment.from_wav(&amp;quot;outro.wav&amp;quot;)

# Let&#39;s consider anything that is 30 decibels quieter than
# the average volume of the podcast to be silence
average_loudness = podcast.rms
silence_threshold = average_loudness * db_to_float(-30)

# filter out the silence
podcast_parts = (ms for ms in podcast if ms.rms &amp;gt; silence_threshold)

# combine all the chunks back together
podcast = reduce(lambda a, b: a + b, podcast_parts)

# add on the bumpers
podcast = intro + podcast + outro

# save the result
podcast.export(&amp;quot;podcast_processed.mp3&amp;quot;, format=&amp;quot;mp3&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，得到完整的人声部分。&lt;/p&gt;

&lt;h1 id=&#34;其它参考&#34;&gt;其它参考&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://timsainburg.com/noise-reduction-python.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Noise reduction using spectral gating in python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mikesmales/Udacity-ML-Capstone&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Udacity 2018 Machine Learning Nanodegree Capstone project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何计算用户生命周期价值（CLV）</title>
      <link>https://kuhungio.me/2019/lifetimes/</link>
      <pubDate>Wed, 25 Dec 2019 23:28:09 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/lifetimes/</guid>
      <description>

&lt;p&gt;在用户关系管理中，常会遇到些直击灵魂的问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;这批用户到底价值几何？&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;为什么要用这种措施去干预用户，而不是另一种方式。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;为什么干预这类用户，而不去干预另一类，他们的划分标准是什么。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有这些问题，实质是因为对客户价值不够了解，缺乏行之有效的划分方式。&lt;/p&gt;

&lt;h2 id=&#34;用户精细化运营价值巨大&#34;&gt;用户精细化运营价值巨大&lt;/h2&gt;

&lt;p&gt;随着人口红利的消失，增长逐渐见顶，急需在现有用户池做学问。过去粗放式的买量策略已经不再生效，一是买量成本逐渐高企，二是买量带来的用户忠诚度极低。对现有客户群体的划分和互相倒流，成为重中之重。行业中的黑话“洗用户”，即是讲的这一策略。&lt;/p&gt;

&lt;p&gt;对于如何划分用户，不用的职能会有不同的看法。产品有产品的看法，可能基于某项功能偏好；运营有运营的看法，是各种活动玩法的定义；甚至领导还有他的一套看法。但是，无论怎么切入，商业的核心拿捏住，才会八九不离十。&lt;/p&gt;

&lt;p&gt;什么是商业的本质：商业的本质是获利。因此，我们从用户的货币价值切入，评估和划分用户的生命周期。&lt;/p&gt;

&lt;p&gt;用户生命周期价值，这并不是学界的新鲜产物，该理论在上世纪80年代就已经提出。但对于互联网，网上可搜寻到的资料少之又少。可能的原因有两个：一是互联网在过去20年快速爆发，风口上躺着也能赚钱；二是各家的策略内部不统一，无法形成统一的口径。&lt;/p&gt;

&lt;p&gt;但这些都不是不去应用他的理由，反而说明其中价值巨大。这里，我们剥离开复杂的商业逻辑，仅从交易入手，分析用户的生命周期价值，以及用户所处的状态。&lt;/p&gt;

&lt;h2 id=&#34;用户生命周期价值-clv&#34;&gt;用户生命周期价值（CLV）&lt;/h2&gt;

&lt;p&gt;随着精细化运营的铺开，过去粗放式的、买量用户已经不再买账。每个用户所能接受的最低服务各不相同。如何根据用户价值，进行资源的有效利用。最大化杠杆的使用，成为企业生死的关键。&lt;/p&gt;

&lt;p&gt;过去，没有统一的理论出现在互联网应用或是游戏中。但是，运用跨学科的思维，就可以发现：市场营销领域已进行过研究，并给出了精度极高、可解释性强的模型方法。&lt;/p&gt;

&lt;p&gt;这种方法，就叫做用户生命周期价值，英文名称 Customer Life Time Value，简称 CLV 或者 LTV。&lt;/p&gt;

&lt;h2 id=&#34;clv-是什么&#34;&gt;CLV 是什么&lt;/h2&gt;

&lt;p&gt;用户生命周期，是一种刻画用户的方法。一般用来解决两类问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用户还有多少价值、用以衡量投入产出比&lt;/li&gt;
&lt;li&gt;在干预用户后，根据用户生命周期价值的变化，优化资源的投放。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;即用户管理的两个核心问题：用户所具备的价值以及策略的有效性。&lt;/p&gt;

&lt;p&gt;需要注意的是，CLV 的产品形态要求非合约。合约在国内最有代表的是合约手机。一般互联网产品，合约形态较为少见。&lt;/p&gt;

&lt;p&gt;CLV 的用户群体需已经产生交易，未付费用户不纳入考量。当然，概念迁移，将付费换成活跃或内容消费，该模型也能处理。&lt;/p&gt;

&lt;h2 id=&#34;clv-回答哪些问题&#34;&gt;CLV 回答哪些问题&lt;/h2&gt;

&lt;p&gt;用户活跃还是流失，用户还有多少付费潜力，用户在未来某段时间会否再次购买。这三个问题，是用户生命周期价值能够回答的。&lt;/p&gt;

&lt;h2 id=&#34;如何在自家产品中引入-clv&#34;&gt;如何在自家产品中引入 CLV&lt;/h2&gt;

&lt;h3 id=&#34;应用场景&#34;&gt;应用场景&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;判断用户所处生命周期阶段&lt;/li&gt;
&lt;li&gt;预测用户指定周期内购买概率&lt;/li&gt;
&lt;li&gt;预测用户的生命周期价值&lt;/li&gt;
&lt;li&gt;通过历史付费数据，预测未来付费&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;活跃与流失的定义&#34;&gt;活跃与流失的定义&lt;/h3&gt;

&lt;p&gt;定义：&lt;/p&gt;

&lt;p&gt;用户有交互为活跃&lt;/p&gt;

&lt;p&gt;用户一段时间不交互，即为流失&lt;/p&gt;

&lt;h3 id=&#34;lifetims-工具包引入&#34;&gt;lifetims 工具包引入&lt;/h3&gt;

&lt;p&gt;安装 python 的工具包：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install lifetimes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;clv-数据挖掘&#34;&gt;CLV 数据挖掘&lt;/h2&gt;

&lt;p&gt;用户生命周期判定，需要三个指标&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;frequency 用户登录的频率，这里为周期内的天数&lt;/li&gt;
&lt;li&gt;recency 用户的最大周期，即第一次活跃到最后一次活跃&lt;/li&gt;
&lt;li&gt;T 用户所处阶段，第一次活跃到观察周期结束&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于付费预测，还需要用户的平均付费金额。&lt;/p&gt;

&lt;h3 id=&#34;数据获取&#34;&gt;数据获取&lt;/h3&gt;

&lt;h4 id=&#34;从数据库获取&#34;&gt;从数据库获取&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;    SELECT
      customer_id,
      COUNT(distinct date(transaction_at)) - 1 as frequency,
      datediff(&#39;day&#39;, MIN(transaction_at), MAX(transaction_at)) as recency,
      AVG(total_price) as monetary_value,
      datediff(&#39;day&#39;, CURRENT_DATE, MIN(transaction_at)) as T
    FROM orders
    GROUP BY customer_id
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;python-处理&#34;&gt;python 处理&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    from lifetimes.datasets import load_transaction_data
    from lifetimes.utils import summary_data_from_transaction_data
    
    transaction_data = load_transaction_data()
    print(transaction_data.head())
    &amp;quot;&amp;quot;&amp;quot;
                      date  id
    0  2014-03-08 00:00:00   0
    1  2014-05-21 00:00:00   1
    2  2014-03-14 00:00:00   2
    3  2014-04-09 00:00:00   2
    4  2014-05-21 00:00:00   2
    &amp;quot;&amp;quot;&amp;quot;
    
    summary = summary_data_from_transaction_data(transaction_data, &#39;id&#39;, &#39;date&#39;, observation_period_end=&#39;2014-12-31&#39;)
    
    print(summary.head())
    &amp;quot;&amp;quot;&amp;quot;
    frequency  recency      T
    id
    0         0.0      0.0  298.0
    1         0.0      0.0  224.0
    2         6.0    142.0  292.0
    3         0.0      0.0  147.0
    4         2.0      9.0  183.0
    &amp;quot;&amp;quot;&amp;quot;
    
    bgf.fit(summary[&#39;frequency&#39;], summary[&#39;recency&#39;], summary[&#39;T&#39;])
    # &amp;lt;lifetimes.BetaGeoFitter: fitted with 5000 subjects, a: 1.85, alpha: 1.86, b: 3.18, r: 0.16&amp;gt;


from lifetimes.datasets import load_cdnow_summary
data = load_cdnow_summary(index_col=[0])

print(data.head())
&amp;quot;&amp;quot;&amp;quot;
     frequency   recency      T
ID
1    2           30.43       38.86
2    1            1.71       38.86
3    0            0.00       38.86
4    0            0.00       38.86
5    0            0.00       38.86
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;bg-nbd-模型&#34;&gt;BG/NBD 模型&lt;/h3&gt;

&lt;p&gt;BG/NBD 是一个经典模型改进型，详细的数学论证参见：&lt;a href=&#34;http://brucehardie.com/notes/009/pareto_nbd_derivations_2005-11-05.pdf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;A Note on Deriving the Pareto/NBD Model
and Related Expressions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;该模型有如下假设：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/lifetimes/assumptions.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;通过模型拟合，得到4个参数。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lifetimes import BetaGeoFitter

# similar API to scikit-learn and lifelines.
bgf = BetaGeoFitter(penalizer_coef=0.0)
bgf.fit(data[&#39;frequency&#39;], data[&#39;recency&#39;], data[&#39;T&#39;])
print(bgf)
&amp;quot;&amp;quot;&amp;quot;
&amp;lt;lifetimes.BetaGeoFitter: fitted with 2357 subjects, a: 0.79, alpha: 4.41, b: 2.43, r: 0.24&amp;gt;
&amp;quot;&amp;quot;&amp;quot;
bgf.summary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/lifetimes/bgm.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;效果可视化&#34;&gt;效果可视化&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lifetimes.plotting import plot_probability_alive_matrix

plot_probability_alive_matrix(bgf)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/lifetimes/frequency_recency.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;右下角为最佳客户，交易频率高。交易跨度大；右上的客户短时多次交易，极可能已流失。&lt;/p&gt;

&lt;h3 id=&#34;预测单个用户的购买行为&#34;&gt;预测单个用户的购买行为&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t = 10 #predict purchases in 10 periods
individual = summary.iloc[20]
# The below function is an alias to `bfg.conditional_expected_number_of_purchases_up_to_time`
bgf.predict(t, individual[&#39;frequency&#39;], individual[&#39;recency&#39;], individual[&#39;T&#39;])
# 0.0576511
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;生命周期价值预测&#34;&gt;生命周期价值预测&lt;/h3&gt;

&lt;p&gt;在预测价值时，需要第四个参数：用户交易的次均金额。&lt;/p&gt;

&lt;p&gt;该模型有个重要前提：购买频次和购买金额无相关性。具体可参考 &lt;a href=&#34;http://www.brucehardie.com/notes/025/gamma_gamma.pdf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;The Gamma-Gamma Model of Monetary
Value&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lifetimes.datasets import load_cdnow_summary_data_with_monetary_value

summary_with_money_value = load_cdnow_summary_data_with_monetary_value()
summary_with_money_value.head()
returning_customers_summary = summary_with_money_value[summary_with_money_value[&#39;frequency&#39;]&amp;gt;0]

print(returning_customers_summary.head())
&amp;quot;&amp;quot;&amp;quot;
             frequency  recency      T  monetary_value
customer_id
1                    2    30.43  38.86           22.35
2                    1     1.71  38.86           11.77
6                    7    29.43  38.86           73.74
7                    1     5.00  38.86           11.77
9                    2    35.71  38.86           25.55
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;相关性检验&#34;&gt;&lt;strong&gt;相关性检验&lt;/strong&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;returning_customers_summary[[&#39;monetary_value&#39;, &#39;frequency&#39;]].corr()
&amp;quot;&amp;quot;&amp;quot;
                monetary_value  frequency
monetary_value        1.000000   0.113884
frequency             0.113884   1.000000
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lifetimes import GammaGammaFitter

ggf = GammaGammaFitter(penalizer_coef = 0)
ggf.fit(returning_customers_summary[&#39;frequency&#39;],
        returning_customers_summary[&#39;monetary_value&#39;])
print(ggf)
&amp;quot;&amp;quot;&amp;quot;
&amp;lt;lifetimes.GammaGammaFitter: fitted with 946 subjects, p: 6.25, q: 3.74, v: 15.45&amp;gt;
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;次均估计&#34;&gt;次均估计&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(ggf.conditional_expected_average_profit(
        summary_with_money_value[&#39;frequency&#39;],
        summary_with_money_value[&#39;monetary_value&#39;]
    ).head(3))
&amp;quot;&amp;quot;&amp;quot;
customer_id
1     24.658619
2     18.911489
3     35.170981
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;总价值估计&#34;&gt;总价值估计&lt;/h4&gt;

&lt;p&gt;最后，使用 DCF 现金流折现，得到用户总体价值的当下估值。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# refit the BG model to the summary_with_money_value dataset
bgf.fit(summary_with_money_value[&#39;frequency&#39;], summary_with_money_value[&#39;recency&#39;], summary_with_money_value[&#39;T&#39;])

print(ggf.customer_lifetime_value(
    bgf, #the model to use to predict the number of future transactions
    summary_with_money_value[&#39;frequency&#39;],
    summary_with_money_value[&#39;recency&#39;],
    summary_with_money_value[&#39;T&#39;],
    summary_with_money_value[&#39;monetary_value&#39;],
    time=12, # months
    discount_rate=0.01 # monthly discount rate ~ 12.7% annually
).head(3))
&amp;quot;&amp;quot;&amp;quot;
customer_id
1      140.096211
2       18.943467
3       38.180574
Name: clv, dtype: float64
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;用户生命周期价值模型，不同于其它模型。该模型对每个用户单独建模，而不是硬性的按流失天数划分，有极强的灵活性。在得到用户生命周期阶段、以及用户的生命周期价值，下一步就是具体应用了。&lt;/p&gt;

&lt;p&gt;落地场景多种多样，但要推动上下游，仍需要足够信服的理由。这里给到的建议是，去模拟历史的数据表现，用数据说明效果。&lt;/p&gt;

&lt;p&gt;喜欢本文的朋友，别忘了点赞 👍、喜欢 ❤ +关注 🔔哦，您的小小举动，是对作者最大的支持~💪&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>机器学习系统设计 Machine learning system design</title>
      <link>https://kuhungio.me/2019/machine_learning_system_design/</link>
      <pubDate>Sun, 01 Dec 2019 18:26:43 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/machine_learning_system_design/</guid>
      <description>

&lt;h1 id=&#34;导读&#34;&gt;导读&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Web app：&lt;a href=&#34;https://kuhungio.me/machine-learning-systems-design/?utm_source=website&amp;amp;utm_campaign=ml_sys_design&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://kuhungio.me/machine-learning-systems-design/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;机器学习系统设计&#34;&gt;机器学习系统设计&lt;/h2&gt;

&lt;p&gt;系统设计题，顾名思义，就是考察一个人设计系统的能力。它是一种国外很喜欢的题型，特别是中高级职位，在算法手撕结束后，一般就是系统设计题。&lt;/p&gt;

&lt;p&gt;国外的算法工程师，被称之为 Machine Learning Engineer。国内的名头比较多，算法工程师、数据挖掘工程师、机器学习工程师、深度学习工程师都指的这个。&lt;/p&gt;

&lt;p&gt;这一岗位同开发岗位，SDE 一样，也需要足够的系统设计经验。&lt;/p&gt;

&lt;p&gt;国外的大佬 github.com/chiphuyen 总结了一份机器学习设计的资料，我在这里做本地化整理，同时增加一些自己的从业体会。&lt;/p&gt;

&lt;p&gt;内容分为3个部分，分别是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;机器学习的系统设计部分，这里做了核心概念的摘录；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;系统设计的案例，由于众所周知的原因，很多文章看不了，我这里将其整理放入了 github，同时笔记标注版的放在了公众号：谷粒说数。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;练习部分，作者列了27道系统设计题。我这里将其布置在了网页上，方便自查，后续会上评论进行答案收集。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;系统设计应关注的点&#34;&gt;系统设计应关注的点&lt;/h3&gt;

&lt;p&gt;系统设计题，如果没有完整的方案也没关系，主要看表现的思想，着重从以下三个方面考察：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;项目有哪些约束条件，哪些能做，哪些不能做。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;方案的利弊，选择方案时，思考方案利弊的过程。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;主要的功能，最后达成什么样的效果。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;系统设计往往很难，这是因为两方面的原因。1. 缺乏有效的评估手段。2. 问题往往模棱两可。面试中的理想候选人应该是这样子的：1. 能够有效的拆解问题，将复杂问题简单化。2. 能够区分该场景是否需要机器学习方案。第二点很重要，因为在当下，受媒体大环境影响，很多人会选择无脑上机器学习，殊不知某些场景简单的方法更有效。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Machine learning methods change every year, solving problems stays the same.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;生产环境不同于学术环境&#34;&gt;生产环境不同于学术环境&lt;/h2&gt;

&lt;p&gt;学术研究的一般有以下两个特点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;想法设法比上一代模型效果更好，而不用思考怎么落地使用它。&lt;/li&gt;
&lt;li&gt;由于效果是第一要务，所以算力没有限制，加钱堆机器即可。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;而生产环境不同，它的特点如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;效果并非越好才好&lt;/li&gt;
&lt;li&gt;算力资源常常有限&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;作为开发者，要始终牢记生产环境是我们的目标。&lt;/p&gt;

&lt;h2 id=&#34;需着重关注的4类问题&#34;&gt;需着重关注的4类问题&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;如何采集数据、如何处理数据。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;怎么选择的模型、为什么。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如何评估你的模型。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果再来一次，哪些地方会做得不一样。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;设计机器学习系统&#34;&gt;设计机器学习系统&lt;/h1&gt;

&lt;p&gt;系统设计方面，作者将其分为了4个层次，我这里也按她的逻辑进行。
&lt;img src=&#34;https://kuhungio.me/images/ml_sys_design/ml_project_flow.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;项目准备&#34;&gt;项目准备&lt;/h2&gt;

&lt;p&gt;项目准备阶段，一般从三个角度思考。如同写程序一样，首先思考需要达成什么样的目标；其次是有哪些限制条件；最后是特殊例子的考虑。&lt;/p&gt;

&lt;p&gt;展开来讲，需要达成什么样的目标：即最后用户怎么使用你的系统，你的系统吞吐多块、响应多快。&lt;/p&gt;

&lt;p&gt;项目的限制条件包括：项目周期多长，有多少算力，需要何种能力，有哪些可用资源。&lt;/p&gt;

&lt;p&gt;特殊例子即：是否需要结合用户做特殊化处理，例如千人千面。&lt;/p&gt;

&lt;p&gt;最后，如同老师设计考试一样，需要考虑如何评估你的系统性能。&lt;/p&gt;

&lt;h2 id=&#34;数据流&#34;&gt;数据流&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Machine learning is driven more by data than by algorithms&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;数据这里主要涉及数据的采集、存储和处理。&lt;/p&gt;

&lt;p&gt;对于数据的采集，需考虑数据的可获得性和数据的质量。换句话说即，有哪些数据、数据的质量如何、还有哪些数据可以获取到。&lt;/p&gt;

&lt;p&gt;数据存储问题需考虑：数据现在存在哪里、每个样本有多大、需要什么样的数据结构进行存储。&lt;/p&gt;

&lt;p&gt;存储之后是数据处理，这一块原文的问题都很好，建议细读。抛出了以下问题：如何将原始数据转化为需要的数据、需要做特征工程吗、需要归一化吗、如何处理缺失数据等。&lt;/p&gt;

&lt;p&gt;最后是两个值得从业者都重视的问题：用户隐私和系统偏差。&lt;/p&gt;

&lt;p&gt;系统需要反馈，则不可避免需要收集用户数据。这里需思考哪些数据可以收集、哪些数据需要用户的同意，以及采用何种形式收集。&lt;/p&gt;

&lt;p&gt;而对于系统性的偏差，一个成语来形容：管中窥豹。如果你的系统是那根管子，你看到的就会是带有偏差的东西。需要时刻提防系统偏差带来的偏见，防止模型放大这种偏见。&lt;/p&gt;

&lt;h2 id=&#34;建模&#34;&gt;建模&lt;/h2&gt;

&lt;p&gt;建模对于熟悉各类算法竞赛的人来说，问题不大。但还是需要强调，生产环境不同于竞赛或学术。模型选择上，简单模型优先。&lt;/p&gt;

&lt;p&gt;简单模型有如下好处：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;逐渐增加负责度，有利于调试&lt;/li&gt;
&lt;li&gt;作为 baseline，方便判断模型好坏&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;选择一个好的 baseline，可以帮助判断问题是否适合上模型。baseline 设置有如下三种方法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;随机 baseline&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;专家 baseline&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;简单的统计 baseline&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后需要强调的是，深度学习并非万能，非深度学习方法也很管用。比起深度学习需要的大量数据，你可能更需要的是早期的用户。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Deep learning needs data，you might first need users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;模型的-debug&#34;&gt;模型的 debug&lt;/h3&gt;

&lt;p&gt;不收敛、过拟合、权重大幅波动&lt;/p&gt;

&lt;h5 id=&#34;常见可能&#34;&gt;常见可能&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;理论局限&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;错误的假设前提&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;复杂模型&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;拼写错误&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;超参数不合适&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;数据问题&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;调试的几个建议&#34;&gt;调试的几个建议&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;逐渐增加复杂度&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;刚开始简单一些，用简单模型验证模型&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在小批次数据上过拟合&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;以此验证模型的极限，观察模型是否适合该问题&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置随机种子&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;保持结果能够复现&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;服务部署&#34;&gt;服务部署&lt;/h2&gt;

&lt;p&gt;模型走到最后一步，就是 Serving。这里我将其翻译为服务部署。类似的文章我也写过，主要是技术层面，可参考：&lt;a href=&#34;https://kuhungio.me/2019/flask_vue_ml/?utm_source=website&amp;amp;utm_campaign=ml_sys_design&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://kuhungio.me/2019/flask_vue_ml/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这里从逻辑层面讲述，主要分为两个部分，以交付用户为分割点。&lt;/p&gt;

&lt;p&gt;交付用户前：从用户收集何种反馈，如何判断模型是否正常。&lt;/p&gt;

&lt;p&gt;交付用户后：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;是否需要拟合最新的反馈结果&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;是否需要个性化服务&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;多久更新一次模型&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后是一些其他问题，诸如：业务是否需要模型的可解释性，潜在的数据偏差是否误导了模型等。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All models are wrong, but some are useful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;10个经典案例学习&#34;&gt;10个经典案例学习&lt;/h1&gt;

&lt;p&gt;作者罗列了10个精彩案例，知名企业的机器学习系统设计文章。但由于一些技术原因，部分内容加载缓慢或无法加载。我这里将其转成 pdf 同步到了我的 Github 上，笔记标注版放在了我的公众号&amp;ndash;谷粒说数上，欢迎大家捧场。&lt;/p&gt;

&lt;p&gt;就内容而言，简单点评一下：&lt;/p&gt;

&lt;p&gt;读后收获最大的是第五篇文章，讲 Airbnb 搜索排序的迭代过程。该文详细描述了初始版到线上版的迭代过程，辅以详细的特征手法和数据说明。同时也是很好的 CTR 点击率转化教程。其他的不读都可以，这篇强烈建议阅读。
&lt;img src=&#34;https://kuhungio.me/images/ml_sys_design/airbnb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;做得最好看得要数第七篇文章，instacart 公司在配送货物过程中，利用可视化辅助算法决策。
&lt;img src=&#34;https://kuhungio.me/images/ml_sys_design/visual.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;更多得精彩，有待各位去发现啦。&lt;/p&gt;

&lt;p&gt;案例地址：&lt;a href=&#34;https://github.com/kuhung/machine-learning-systems-design/tree/master/pdf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/kuhung/machine-learning-systems-design/tree/master/pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;笔记标注版：关注公众号【谷粒说数】，陆续放出。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;27道练习题&#34;&gt;27道练习题&lt;/h1&gt;

&lt;p&gt;俗话说，学而不思则殆。作者也总结了27道系统设计的练习题，但感觉没有网页看着爽，于是便捣鼓上线了网站，后续将引入评论功能，欢迎贡献答案。合适的答案将整理署名后，反馈给原作者。&lt;/p&gt;

&lt;p&gt;练习网站：&lt;a href=&#34;https://kuhungio.me/machine-learning-systems-design/?utm_source=website&amp;amp;utm_campaign=ml_sys_design&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://kuhungio.me/machine-learning-systems-design/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/ml_sys_design/website.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;不知道对于机器学习系统设计，你有什么想法呢？欢迎在屏幕下方留言。&lt;/p&gt;

&lt;p&gt;喜欢我的朋友，别忘了点赞 👍、喜欢 ❤ +关注 🔔哦，你的鼓励是对我最大的支持~💪
&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于我&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dataops 数据化运维实践</title>
      <link>https://kuhungio.me/2019/dataops/</link>
      <pubDate>Sat, 19 Oct 2019 11:33:09 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/dataops/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;翻译自：《What is DataOps? Everything You Need to Know》 From Oracle Data Science Blog&lt;/p&gt;

&lt;p&gt;图片自：《DataOps is Not Just DevOps for Data》By DataKitchen in Medium&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;DataOps, 看到它的第一眼，大多数人会觉得陌生。但是提到另一个词——DevOps，做开发的同学可能会有些熟悉。DataOps 的理念与 DevOps 类似：&lt;strong&gt;将开发或者说是数据，与运维、测试相结合，自动化业务的交付以及架构的变更，使得构建、测试和发布能够更加快捷、频繁且可靠。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/dataops/dataops.PNG&#34; alt=&#34;DevOps&amp;amp;DataOps&#34; /&gt;&lt;/p&gt;

&lt;p&gt;DataOps，全称 Data Operations，是一种敏捷运维方法，无感知地将IT基础设施和大数据分析技术结合起来。它的目的是通过结合数据管理的目标与过程，加快分析的速度与准确度。&lt;strong&gt;而这一过程，通常会涉及数据的多个流程：数据获取、数据质量检查、自动化、集成，以及最终的模型部署与管理。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/dataops/dataopspipeline.PNG&#34; alt=&#34;DataOps pipeline&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最核心的，DataOps 是为了方便管理数据、特别是当你有了一个特定的数据目标的时候。举个例子：为了&lt;strong&gt;降低客户的流失率&lt;/strong&gt;，可以通过利用客户数据构建一个&lt;strong&gt;推荐引擎&lt;/strong&gt;，推荐客户相关的东西，以此来减少浏览到下单的时间，减少客户流失。&lt;/p&gt;

&lt;p&gt;这是一个很自然的想法，但是却并不是一件容易的事情。上面的设想需要以下条件：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;你的数据科学团队能够获取到他们需要的数据，同时能够有工具去部署模型。&lt;/li&gt;
&lt;li&gt;除此之外，还需要能够将模型集成到你的网站中去，在新数据上训练以持续的改进。&lt;/li&gt;
&lt;li&gt;最后，需要一套报表系统来监控其表现。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;现在比较流行的做法，做好上面的事情，需要多个部门的合作，包括工程师、IT运维人员以及业务团队。&lt;/p&gt;

&lt;h2 id=&#34;谁能从-dataops-中获利&#34;&gt;谁能从 DataOps 中获利？&lt;/h2&gt;

&lt;p&gt;总的来说，&lt;strong&gt;几乎所有人都会从 DataOps 中获利&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;更好的数据管理将会带来更多可利用的数据；&lt;/li&gt;
&lt;li&gt;越好的数据质量会有更准确的分析，与之相伴的就是更好的 insights、商业策略以及更高的利润。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DataOps 起一个润滑剂的作用，使数据团队、工程师团队和技术专家之间的工作更加紧密、更加自动化，以此来充分发掘数据价值、减少时间。&lt;/p&gt;

&lt;p&gt;Ashish Thusoo，Qubole 的联合创始人曾在书籍《Creating a Data-Driven Enterprise with DataOps》写道：我在2007年的夏天加入 FaceBook 的数据团队。像平常一样，公司里的任何人想获取无论多小的数据，都不得不找到数据团队，并发起流程。我们的数据团队很优秀，但是他们的精力也有上限。很明显，这是一个&lt;strong&gt;瓶颈&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/dataops/operations.PNG&#34; alt=&#34;业务团队与数据团队需要频繁对接&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;dataops-这一概念从何而来&#34;&gt;DataOps 这一概念从何而来？&lt;/h2&gt;

&lt;p&gt;DataOps 起源于 &lt;strong&gt;DevOps&lt;/strong&gt; 这一概念。据了解，财富1000强的公司里，80%的公司已经采用了 DevOps 这一方法。DevOps 的成功主要仰仗于：它把之前独立的两个部门联合在了一起——开发和运维。在 DevOps 的世界里，软件的发布是迅速且持续的，因为整个团队都被整合在了一起，用来检查并处理当下的问题。&lt;/p&gt;

&lt;p&gt;DataOps 继承了这一观念，并将之应用在数据生命周期里。DevOps 的持续集成、交付和运维的理念在数据的处理和产品化过程中也有所体现。具体来讲：&lt;strong&gt;数据科学团队利用软件版本控制工具 git、svn 来记录代码的变更，同时使用 Docker 和 Kubernetes 等容器技术来创建分析和部署模型。将数据科学与 DevOps 相结合的过程，也可被称之为“持续分析”。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;如何在组织中应用-dataops&#34;&gt;如何在组织中应用 DataOps？&lt;/h2&gt;

&lt;p&gt;正如你所看到的，DataOps 的应用，并非某种特定方法，而是一些&lt;strong&gt;关键领域的聚焦&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;以下是相关领域：&lt;/p&gt;

&lt;h3 id=&#34;data-democratization&#34;&gt;Data Democratization&lt;/h3&gt;

&lt;p&gt;根据 Experian Data Quality 调查显示：&lt;strong&gt;96%&lt;/strong&gt; 的首席数据官认为相关人员需要比以往更多的数据权限，&lt;strong&gt;53%&lt;/strong&gt;的人认为数据权限是最大的决策障碍。与之相反的是，我们当下有大量的数据在产生、存储。据测算。截至2020年，我们将会产生 &lt;strong&gt;40 zettabytes&lt;/strong&gt; 的数据，相当于地球上的人每人拥有 &lt;strong&gt;5200 GB&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;正如 thusso 在他 Facebook 工作期间看到的一样，缺少数据权限将是创新的极大障碍。自助的数据权限和相关的基础设施显得尤为重要。机器学习和深度学习应用需要持续不断的新数据以训练和改进；而想成为顶尖公司则需要其数据真正容易获取。&lt;/p&gt;

&lt;h3 id=&#34;leverage-platforms-and-open-source-tools&#34;&gt;Leverage Platforms and Open Source Tools&lt;/h3&gt;

&lt;p&gt;在一期 Forbes 中，Technology Strategy Crystal Valentine 的 VP MapR 描述道这一层次的 DataOps：“首先，在工具层面，DataOps 需要一个社区主导、支持主流语言和框架的&lt;strong&gt;数据科学平台&lt;/strong&gt;。”除此之外，数据迁移、编排、集成、性能监控的平台也同样重要。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/dataops/tools.PNG&#34; alt=&#34;数据科学平台&#34; /&gt;&lt;/p&gt;

&lt;p&gt;敏捷并不意味着需要浪费时间开发非必须的东西，或者是重复造一些已经开源的工具轮子。综合考虑你的数据需求且评估你的技术栈，选择合适的开源工具即可。&lt;/p&gt;

&lt;h3 id=&#34;automate-automate-automate&#34;&gt;Automate, Automate,Automate&lt;/h3&gt;

&lt;p&gt;这一理念直接取自 DevOps：为了更及时的评估数据集成的价值，自动化一些步骤是非常重要的。比如说&lt;strong&gt;质量保证测试&lt;/strong&gt;和&lt;strong&gt;数据分析的管道监控&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/dataops/monitoring.PNG&#34; alt=&#34;自动化监测&#34; /&gt;&lt;/p&gt;

&lt;p&gt;采用&lt;strong&gt;微服务自给自足&lt;/strong&gt;也是同样的道理。 举个例子：让你的数据分析师能够以 &lt;strong&gt;API&lt;/strong&gt; 的方式自行部署模型，这意味着开发团队能够在不重构的基础上集成该功能。这将带来生产力的提升。&lt;/p&gt;

&lt;h3 id=&#34;govern-with-care&#34;&gt;Govern With Care&lt;/h3&gt;

&lt;p&gt;越来越多的公司开始采用 Center of Excellence 的方法来实现数据科学管理，这并非是偶然。只有在建立一套数据的处理、工具平台、基础设施、权限划分以及性能监控后，才能真正获取数据科学、或者说是 DataOps 的投资回报。&lt;/p&gt;

&lt;p&gt;因此，在该领域&lt;strong&gt;62%&lt;/strong&gt;的优秀人士有一个清晰且正确的数据科学发展计划。与之相对应的是仅仅28%的普通人和29%的公司有这么一个想法。&lt;/p&gt;

&lt;h3 id=&#34;smash-silos&#34;&gt;Smash Silos&lt;/h3&gt;

&lt;p&gt;除上面列到的4项以外，&lt;strong&gt;跨部门合作&lt;/strong&gt;也是应用 DataOps 非常重要的一点。DataOps 化过程中引进的工具和平台应该服务于更大的目标：&lt;strong&gt;整合不同的团队以更高效的使用数据。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/dataops/collaboration.PNG&#34; alt=&#34;跨部门合作&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;“注意：数据并不属于 IT、数据科学家或者数据分析师。”Thusso 写道：“它属于业务中的所有人。所以，&lt;strong&gt;你的工具应该允许雇员创造他们自己的分析与可视化报告，并且能够在同事间分享他们的发现。&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于译者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《学习之道》笔记思维导图</title>
      <link>https://kuhungio.me/2019/the_way_to_learn/</link>
      <pubDate>Wed, 16 Oct 2019 07:56:13 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/the_way_to_learn/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://kuhungio.me/images/mindmap/waytolearn.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kuhungio.me/about/&#34;&gt;关于作者&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>